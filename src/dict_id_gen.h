// ------------------------------------------------------------------
// dict_id_gen.h
//   Copyright (C) 2019-2023 Genozip Limited. Patent Pending.
//   Please see terms and conditions in the file LICENSE.txt
//
//   WARNING: Genozip is proprietary, not open source software. Modifying the source code is strictly prohibited
//   and subject to penalties specified in the license.

// THIS FILE IS AUTO-GENERATED BY dict_id_gen.sh

#pragma once

#define TAG(tag) #tag, sizeof #tag - 1

#define _REF_CONTIG ((uint64_t)78380272602883)
#define _VCF_CHROM ((uint64_t)332043274243)
#define _VCF_POS ((uint64_t)5459728)
#define _VCF_ID ((uint64_t)17417)
#define _VCF_REFALT ((uint64_t)23727740826305810)
#define _VCF_QUAL ((uint64_t)1279350033)
#define _VCF_FILTER ((uint64_t)90457720506630)
#define _VCF_INFO ((uint64_t)1330007561)
#define _VCF_FORMAT ((uint64_t)92639446847238)
#define _VCF_SAMPLES ((uint64_t)23438617134055699)
#define _VCF_LOOKBACK ((uint64_t)5423250129271344908)
#define _VCF_EOL ((uint64_t)5000965)
#define _VCF_TOPLEVEL ((uint64_t)5495893775908622100)
#define _VCF_oCHROM ((uint64_t)85003078222639)
#define _VCF_oPOS ((uint64_t)1397706799)
#define _VCF_oREFALT ((uint64_t)23727741279228463)
#define _VCF_oXSTRAND ((uint64_t)4921943264620402735)
#define _VCF_COORDS ((uint64_t)91552903810819)
#define _VCF_oSTATUS ((uint64_t)23456243428631599)
#define _VCF_COPYPOS ((uint64_t)23449629581389827)
#define _VCF_LIFT_REF ((uint64_t)5063543925437253900)
#define _VCF_COPYSTAT ((uint64_t)6071226489629601539)
#define _VCF_TOPLUFT ((uint64_t)23721230210199316)
#define _VCF_LINE_NUM ((uint64_t)5572446285032474892)
#define _VCF_DEBUG_LINES ((uint64_t)6000288155260371460)
#define _FORMAT_AD ((uint64_t)17473)
#define _FORMAT_ADALL ((uint64_t)327696860225)
#define _FORMAT_ADF ((uint64_t)4604993)
#define _FORMAT_ADR ((uint64_t)5391425)
#define _FORMAT_AF ((uint64_t)17985)
#define _FORMAT_DP ((uint64_t)20548)
#define _FORMAT_DS ((uint64_t)21316)
#define _FORMAT_GL ((uint64_t)19527)
#define _FORMAT_GP ((uint64_t)20551)
#define _FORMAT_GQ ((uint64_t)20807)
#define _FORMAT_GT ((uint64_t)21575)
#define _FORMAT_PL ((uint64_t)19536)
#define _FORMAT_PLy ((uint64_t)7949392)
#define _FORMAT_PLn ((uint64_t)7228496)
#define _FORMAT_PRI ((uint64_t)4805200)
#define _FORMAT_F1R2 ((uint64_t)844247366)
#define _FORMAT_F2R1 ((uint64_t)827470406)
#define _FORMAT_MB ((uint64_t)16973)
#define _FORMAT_PP ((uint64_t)20560)
#define _FORMAT_SAC ((uint64_t)4407635)
#define _FORMAT_SB ((uint64_t)16979)
#define _FORMAT_PS ((uint64_t)21328)
#define _FORMAT_PSpos ((uint64_t)495790871376)
#define _FORMAT_PSalt ((uint64_t)500034523984)
#define _FORMAT_PSref ((uint64_t)439788655440)
#define _FORMAT_PID ((uint64_t)4475216)
#define _FORMAT_PGT ((uint64_t)5523280)
#define _FORMAT_FL ((uint64_t)19526)
#define _FORMAT_AB ((uint64_t)16961)
#define _FORMAT_AB3 ((uint64_t)3359297)
#define _FORMAT_GT_HT ((uint64_t)5523520)
#define _FORMAT_GT_HT_INDEX ((uint64_t)6073201152031082816)
#define _FORMAT_PBWT_RUNS ((uint64_t)5644508230173471040)
#define _FORMAT_PBWT_FGRC ((uint64_t)5928784762511700544)
#define _INFO_AC ((uint64_t)17345)
#define _INFO_AF ((uint64_t)18113)
#define _INFO_AN ((uint64_t)20161)
#define _INFO_AA ((uint64_t)16833)
#define _INFO_BaseCounts ((uint64_t)8319395862152438210)
#define _INFO_DP ((uint64_t)20676)
#define _INFO_DP4 ((uint64_t)3428548)
#define _INFO_SF ((uint64_t)18131)
#define _INFO_VQSLOD ((uint64_t)75107373634006)
#define _INFO_MQ ((uint64_t)20941)
#define _INFO_MQ0 ((uint64_t)3166669)
#define _INFO_CIPOS ((uint64_t)357812947395)
#define _INFO_CIEND ((uint64_t)293370939843)
#define _INFO_NS ((uint64_t)21454)
#define _INFO_ANN ((uint64_t)5131969)
#define _INFO_ANN_Allele ((uint64_t)7308327811160097216)
#define _INFO_ANN_Annotation ((uint64_t)7957695015373844929)
#define _INFO_ANN_Annotation_Impact ((uint64_t)8386654066607993537)
#define _INFO_ANN_Gene_Name ((uint64_t)7308604759626691521)
#define _INFO_ANN_Gene_ID ((uint64_t)4920568956974478529)
#define _INFO_ANN_Feature_Type ((uint64_t)7309475598605628865)
#define _INFO_ANN_Feature_ID ((uint64_t)4920568956974413505)
#define _INFO_ANN_Transcript_BioType ((uint64_t)7309475598824650689)
#define _INFO_ANN_Rank ((uint64_t)118121823353025)
#define _INFO_ANN_HGVS_c ((uint64_t)7160533562570586561)
#define _INFO_ANN_HGVS_p ((uint64_t)8097282285063659969)
#define _INFO_ANN_cDNA ((uint64_t)71804410618561)
#define _INFO_ANN_CDS ((uint64_t)357627552705)
#define _INFO_ANN_AA ((uint64_t)1094804673)
#define _INFO_ANN_Distance ((uint64_t)7305804385182049729)
#define _INFO_ANN_Errors ((uint64_t)8318833999040833217)
#define _INFO_END ((uint64_t)4476613)
#define _INFO_MLEAC ((uint64_t)288857869517)
#define _INFO_MLEAF ((uint64_t)301742771405)
#define _INFO_LDAF ((uint64_t)1178682572)
#define _INFO_SOR ((uint64_t)5394387)
#define _INFO_QD ((uint64_t)17617)
#define _INFO_RAW_MQandDP ((uint64_t)5783858246659293650)
#define _INFO_RAW_MQandDP_MQ ((uint64_t)5783858246523629778)
#define _INFO_RAW_MQandDP_DP ((uint64_t)5783858246523630034)
#define _FORMAT_RGQ ((uint64_t)5326674)
#define _FORMAT_MIN_DP ((uint64_t)88254586964301)
#define _FORMAT_BX ((uint64_t)22594)
#define _FORMAT_PQ ((uint64_t)20816)
#define _FORMAT_JQ ((uint64_t)20810)
#define _INFO_vep ((uint64_t)7366134)
#define _INFO_AGE_HISTOGRAM_HET ((uint64_t)6072339247036450753)
#define _INFO_AGE_HISTOGRAM_HOM ((uint64_t)5570750838538061761)
#define _INFO_MAX_AF ((uint64_t)77246586438093)
#define _INFO_CSQ ((uint64_t)5329859)
#define _INFO_CSQ_Allele ((uint64_t)7308327811210757056)
#define _INFO_CSQ_Consequence ((uint64_t)7305804401960235491)
#define _INFO_CSQ_IMPACT ((uint64_t)6071768535843156707)
#define _INFO_CSQ_SYMBOL ((uint64_t)5498686569886987235)
#define _INFO_CSQ_Gene ((uint64_t)7308890602250384611)
#define _INFO_CSQ_Feature ((uint64_t)7310034287616800483)
#define _INFO_CSQ_EXON ((uint64_t)5642825912858917091)
#define _INFO_CSQ_INTRON ((uint64_t)5642819380213660131)
#define _INFO_CSQ_HGVSc ((uint64_t)7157159097128935907)
#define _INFO_CSQ_HGVSp ((uint64_t)8093907819621999331)
#define _INFO_CSQ_cDNA_position ((uint64_t)7957695014888498147)
#define _INFO_CSQ_CDS_position ((uint64_t)7957695014888498403)
#define _INFO_CSQ_Protein_position ((uint64_t)7957695014888498659)
#define _INFO_CSQ_Amino_acids ((uint64_t)8314886687319877347)
#define _INFO_CSQ_Codons ((uint64_t)8317708038451718115)
#define _INFO_CSQ_Existing_variation ((uint64_t)7957695014888499427)
#define _INFO_CSQ_ALLELE_NUM ((uint64_t)5572446285234137571)
#define _INFO_CSQ_DISTANCE ((uint64_t)4990918854500903651)
#define _INFO_CSQ_STRAND ((uint64_t)4921943264570076131)
#define _INFO_CSQ_FLAGS ((uint64_t)6000836824532217059)
#define _INFO_CSQ_VARIANT_CLASS ((uint64_t)6004214524252745187)
#define _INFO_CSQ_MINIMISED ((uint64_t)4919429742334275299)
#define _INFO_CSQ_SYMBOL_SOURCE ((uint64_t)4990923338446761955)
#define _INFO_CSQ_HGNC_ID ((uint64_t)4920568810610847971)
#define _INFO_CSQ_CANONICAL ((uint64_t)5494747002544812515)
#define _INFO_CSQ_TSL ((uint64_t)5499832338312557283)
#define _INFO_CSQ_APPRIS ((uint64_t)6001418483363181539)
#define _INFO_CSQ_CCDS ((uint64_t)5999994559970637027)
#define _INFO_CSQ_ENSP ((uint64_t)5788056005725353443)
#define _INFO_CSQ_SWISSPROT ((uint64_t)6075164927261374179)
#define _INFO_CSQ_TREMBL ((uint64_t)5495039455457933283)
#define _INFO_CSQ_UNIPARC ((uint64_t)4851011561849060067)
#define _INFO_CSQ_GENE_PHENO ((uint64_t)5714581154084125155)
#define _INFO_CSQ_SIFT ((uint64_t)6072621769751231203)
#define _INFO_CSQ_PolyPhen ((uint64_t)7954879010990932451)
#define _INFO_CSQ_DOMAINS ((uint64_t)6002815898217562851)
#define _INFO_CSQ_HGVS_OFFSET ((uint64_t)6072351234056209379)
#define _INFO_CSQ_AF ((uint64_t)19775126011856099)
#define _INFO_CSQ_CLIN_SIG ((uint64_t)5136728518844175843)
#define _INFO_CSQ_SOMATIC ((uint64_t)4848499113355073251)
#define _INFO_CSQ_PHENO ((uint64_t)5714581154084114915)
#define _INFO_CSQ_PUBMED ((uint64_t)4919423115199731939)
#define _INFO_CSQ_MOTIF_NAME ((uint64_t)4993719366451419619)
#define _INFO_CSQ_MOTIF_POS ((uint64_t)6003105198624692963)
#define _INFO_CSQ_HIGH_INF_POS ((uint64_t)6003105198624686307)
#define _INFO_CSQ_MOTIF_SCORE_CHANGE ((uint64_t)4992044754407728355)
#define _INFO_CSQ_LoF ((uint64_t)5075359277339846115)
#define _INFO_CSQ_LoF_filter ((uint64_t)8243122701541269219)
#define _INFO_CSQ_LoF_flags ((uint64_t)8315722354811678179)
#define _INFO_CSQ_LoF_info ((uint64_t)8027224784449514211)
#define _INFO_CSQ_context ((uint64_t)8392569455859949539)
#define _INFO_CSQ_ancestral ((uint64_t)7809649072743328739)
#define _INFO_ALLELEID ((uint64_t)4920540261761436865)
#define _INFO_CLNDN ((uint64_t)336153431235)
#define _INFO_CLNHGVS ((uint64_t)23457287222742211)
#define _INFO_CLNVI ((uint64_t)314980584643)
#define _INFO_HGVS_snp_pos ((uint64_t)8317990591548305608)
#define _INFO_HGVS_snp_refalt ((uint64_t)8389187298046456264)
#define _INFO_HGVS_del_start_pos ((uint64_t)7810759489376170696)
#define _INFO_HGVS_del_end_pos ((uint64_t)7810759489376170952)
#define _INFO_HGVS_del_payload ((uint64_t)7810759489376171208)
#define _INFO_HGVS_ins_start_pos ((uint64_t)8317701419990201800)
#define _INFO_HGVS_ins_end_pos ((uint64_t)8317701419990202056)
#define _INFO_HGVS_ins_payload ((uint64_t)8317701419990202312)
#define _INFO_HGVS_delins_end_pos ((uint64_t)8317701475824777416)
#define _INFO_HGVS_delins_payload ((uint64_t)8317701475824777672)
#define _INFO_DP_HIST ((uint64_t)23735472255619268)
#define _INFO_GQ_HIST ((uint64_t)23735472255619527)
#define _INFO_SVLEN ((uint64_t)336170079955)
#define _INFO_SVTYPE ((uint64_t)76211398399699)
#define _FORMAT_RDF ((uint64_t)4605010)
#define _FORMAT_RDR ((uint64_t)5391442)
#define _FORMAT_SDP ((uint64_t)5260371)
#define _FORMAT_RD ((uint64_t)17490)
#define _FORMAT_FREQ ((uint64_t)1363497542)
#define _FORMAT_PVAL ((uint64_t)1279350352)
#define _FORMAT_RBQ ((uint64_t)5325394)
#define _FORMAT_ABQ ((uint64_t)5325377)
#define _INFO_ADP ((uint64_t)5260481)
#define _INFO_WT ((uint64_t)21719)
#define _INFO_HET ((uint64_t)5522888)
#define _INFO_HOM ((uint64_t)5066696)
#define _INFO_NC ((uint64_t)17358)
#define _INFO_RS ((uint64_t)21458)
#define _INFO_RSPOS ((uint64_t)357812949970)
#define _INFO_TOPMED ((uint64_t)75064440541140)
#define _INFO_dbSNPBuildID ((uint64_t)4920574484212310756)
#define _INFO_GENEINFO ((uint64_t)5712339253968389575)
#define _INFO_PROBE_A ((uint64_t)18400624556069584)
#define _INFO_PROBE_B ((uint64_t)18682099532780240)
#define _INFO_ALLELE_A ((uint64_t)4710559929135287489)
#define _INFO_ALLELE_B ((uint64_t)4782617523173215425)
#define _INFO_refSNP ((uint64_t)88297336890866)
#define _INFO_ILLUMINA_CHR ((uint64_t)5929062986165275849)
#define _INFO_ILLUMINA_POS ((uint64_t)6003105198691339465)
#define _INFO_ILLUMINA_STRAND ((uint64_t)4921943264636718281)
#define _FORMAT_BAF ((uint64_t)4604226)
#define _FORMAT_X ((uint64_t)88)
#define _FORMAT_Y ((uint64_t)89)
#define _INFO_AR2 ((uint64_t)3297985)
#define _INFO_DR2 ((uint64_t)3297988)
#define _INFO_IMP ((uint64_t)5262793)
#define _FORMAT_RC ((uint64_t)17234)
#define _FORMAT_AC ((uint64_t)17217)
#define _INFO_RSID ((uint64_t)1145656274)
#define _FORMAT_NS ((uint64_t)21326)
#define _FORMAT_EZ ((uint64_t)23109)
#define _FORMAT_SI ((uint64_t)18771)
#define _FORMAT_NC ((uint64_t)17230)
#define _FORMAT_ES ((uint64_t)21317)
#define _FORMAT_SE ((uint64_t)17747)
#define _FORMAT_LP ((uint64_t)20556)
#define _FORMAT_ID ((uint64_t)17481)
#define _INFO_LUFT ((uint64_t)1413895628)
#define _INFO_PRIM ((uint64_t)1296650960)
#define _INFO_LREJ ((uint64_t)1785033420)
#define _INFO_PREJ ((uint64_t)1785033424)
#define _SAM_RNAME ((uint64_t)297648868882)
#define _SAM_QNAME ((uint64_t)297648868881)
#define _SAM_Q0NAME ((uint64_t)76198110441681)
#define _SAM_Q1NAME ((uint64_t)76198110441937)
#define _SAM_Q2NAME ((uint64_t)76198110442193)
#define _SAM_Q3NAME ((uint64_t)76198110442449)
#define _SAM_Q4NAME ((uint64_t)76198110442705)
#define _SAM_Q5NAME ((uint64_t)76198110442961)
#define _SAM_Q6NAME ((uint64_t)76198110443217)
#define _SAM_Q7NAME ((uint64_t)76198110443473)
#define _SAM_Q8NAME ((uint64_t)76198110443729)
#define _SAM_Q9NAME ((uint64_t)76198110443985)
#define _SAM_QANAME ((uint64_t)76198110446033)
#define _SAM_QBNAME ((uint64_t)76198110446289)
#define _SAM_QmNAME ((uint64_t)76198110457297)
#define _SAM_FLAG ((uint64_t)1195461638)
#define _SAM_FLAG0 ((uint64_t)53082596323334)
#define _SAM_FLAG1 ((uint64_t)54182107951366)
#define _SAM_POS ((uint64_t)5459728)
#define _SAM_MAPQ ((uint64_t)1364214029)
#define _SAM_CIGAR ((uint64_t)353282509059)
#define _SAM_RNEXT ((uint64_t)362258189842)
#define _SAM_PNEXT ((uint64_t)362258189840)
#define _SAM_P0NEXT ((uint64_t)92738096607248)
#define _SAM_P1NEXT ((uint64_t)92738096607504)
#define _SAM_P2NEXT ((uint64_t)92738096607760)
#define _SAM_P3NEXT ((uint64_t)92738096608016)
#define _SAM_TLEN ((uint64_t)1313164308)
#define _SAM_AUX ((uint64_t)5788929)
#define _SAM_SQBITMAP ((uint64_t)5782988420922102035)
#define _SAM_NONREF ((uint64_t)77263547551502)
#define _SAM_NONREF_X ((uint64_t)6367885661672722190)
#define _SAM_GPOS ((uint64_t)1397706759)
#define _SAM_STRAND ((uint64_t)75102894052371)
#define _SAM_SEQMIS_A ((uint64_t)4710575309547717907)
#define _SAM_SEQMIS_C ((uint64_t)4854690497623573779)
#define _SAM_SEQMIS_G ((uint64_t)5142920873775285523)
#define _SAM_SEQMIS_T ((uint64_t)6079669596268348691)
#define _SAM_QUAL ((uint64_t)1279350033)
#define _SAM_DOMQRUNS ((uint64_t)6002829165371150084)
#define _SAM_QUALMPLX ((uint64_t)6362548666489722129)
#define _SAM_DIVRQUAL ((uint64_t)5494766828130814212)
#define _SAM_QNAMESA ((uint64_t)18387430600166929)
#define _SAM_QUALSA ((uint64_t)71826017441041)
#define _SAM_QUAL_FLANK ((uint64_t)5426358465838798097)
#define _SAM_QUAL_FLANK_DOMQRUNS ((uint64_t)5858425845353689169)
#define _SAM_QUAL_FLANK_QUALMPLX ((uint64_t)6362548666808807761)
#define _SAM_QUAL_FLANK_DIVRQUAL ((uint64_t)5933010117112246865)
#define _SAM_EOL ((uint64_t)5000965)
#define _SAM_BAM_BIN ((uint64_t)22035597598998786)
#define _SAM_TOPLEVEL ((uint64_t)5495893775908622100)
#define _SAM_TOP2BAM ((uint64_t)21745325774491412)
#define _SAM_TOP2FQ ((uint64_t)89361933684500)
#define _SAM_TOP2FQEX ((uint64_t)6360579410664378132)
#define _SAM_TAXID ((uint64_t)293288296724)
#define _SAM_BUDDY ((uint64_t)383397418242)
#define _SAM_SAG ((uint64_t)4669715)
#define _SAM_SAALN ((uint64_t)336286794003)
#define _SAM_MC_Z ((uint64_t)1516192525)
#define _SAM_DEBUG_LINES ((uint64_t)6000288155260371460)
#define _OPTION_AM_i ((uint64_t)1765428545)
#define _OPTION_AS_i ((uint64_t)1765430081)
#define _OPTION_CC_Z ((uint64_t)1513767747)
#define _OPTION_CP_i ((uint64_t)1765429315)
#define _OPTION_CM_i ((uint64_t)1765428547)
#define _OPTION_FI_i ((uint64_t)1765427526)
#define _OPTION_H0_i ((uint64_t)1765421128)
#define _OPTION_H1_i ((uint64_t)1765421384)
#define _OPTION_H2_i ((uint64_t)1765421640)
#define _OPTION_MC_Z ((uint64_t)1513767757)
#define _OPTION_MD_Z ((uint64_t)1513768013)
#define _OPTION_MQ_i ((uint64_t)1765429581)
#define _OPTION_NH_i ((uint64_t)1765427278)
#define _OPTION_IH_i ((uint64_t)1765427273)
#define _OPTION_HI_i ((uint64_t)1765427528)
#define _OPTION_NM_i ((uint64_t)1765428558)
#define _OPTION_PQ_i ((uint64_t)1765429584)
#define _OPTION_SM_i ((uint64_t)1765428563)
#define _OPTION_TC_i ((uint64_t)1765426004)
#define _OPTION_UQ_i ((uint64_t)1765429589)
#define _OPTION_U2_Z ((uint64_t)1513763413)
#define _OPTION_U2_DOMQRUNS ((uint64_t)6002829165371150148)
#define _OPTION_U2_QUALMPLX ((uint64_t)6362548666489722193)
#define _OPTION_U2_DIVRQUAL ((uint64_t)5494766828130814276)
#define _OPTION_E2_Z ((uint64_t)1513763397)
#define _OPTION_2NONREF ((uint64_t)19779468173193806)
#define _OPTION_N2ONREFX ((uint64_t)6360847743510852206)
#define _OPTION_2GPOS ((uint64_t)357812941319)
#define _OPTION_S2TRAND ((uint64_t)19226340877414995)
#define _OPTION_SA_Z ((uint64_t)1513767251)
#define _OPTION_SA_RNAME ((uint64_t)4993719366685110355)
#define _OPTION_SA_STRAND ((uint64_t)4921943264803762515)
#define _OPTION_SA_POS ((uint64_t)23449629681070675)
#define _OPTION_SA_CIGAR ((uint64_t)5927096965052576595)
#define _OPTION_SA_NM ((uint64_t)84999000896595)
#define _OPTION_SA_MAPQ ((uint64_t)5859254915775411539)
#define _OPTION_SA_MAIN ((uint64_t)5641111808824653395)
#define _OPTION_PG_Z ((uint64_t)1513768784)
#define _OPTION_PU_Z ((uint64_t)1513772368)
#define _OPTION_RG_Z ((uint64_t)1513768786)
#define _OPTION_LB_Z ((uint64_t)1513767500)
#define _OPTION_BC_Z ((uint64_t)1513767746)
#define _OPTION_BC_ARR ((uint64_t)90513237558082)
#define _OPTION_QT_Z ((uint64_t)1513772113)
#define _OPTION_QT_ARR ((uint64_t)90513237562449)
#define _OPTION_QT_DOMQRUNS ((uint64_t)5858425845354606609)
#define _OPTION_QT_QUALMPLX ((uint64_t)6362548666809725201)
#define _OPTION_QT_DIVRQUAL ((uint64_t)5860948125028725265)
#define _OPTION_CR_Z ((uint64_t)1513771587)
#define _OPTION_CR_Z_X ((uint64_t)379556343875)
#define _OPTION_CB_Z ((uint64_t)1513767491)
#define _OPTION_CB_ARR ((uint64_t)23171388814798915)
#define _OPTION_CB_SUFFIX ((uint64_t)5063828647593521475)
#define _OPTION_CY_Z ((uint64_t)1513773379)
#define _OPTION_CY_ARR ((uint64_t)90513237563715)
#define _OPTION_CY_DOMQRUNS ((uint64_t)5858425845354934275)
#define _OPTION_CY_QUALMPLX ((uint64_t)6362548666810052867)
#define _OPTION_CY_DIVRQUAL ((uint64_t)5860948125029052931)
#define _OPTION_OX_Z ((uint64_t)1513773135)
#define _OPTION_MI_Z ((uint64_t)1513769293)
#define _OPTION_OQ_Z ((uint64_t)1513771343)
#define _OPTION_OQ_DOMQRUNS ((uint64_t)5858425845354409999)
#define _OPTION_OQ_QUALMPLX ((uint64_t)6362548666809528591)
#define _OPTION_OQ_DIVRQUAL ((uint64_t)5860948125028528655)
#define _OPTION_OA_Z ((uint64_t)1513767247)
#define _OPTION_OA_RNAME ((uint64_t)4993719366685110351)
#define _OPTION_OA_STRAND ((uint64_t)4921943264803762511)
#define _OPTION_OA_POS ((uint64_t)23449629681070671)
#define _OPTION_OA_CIGAR ((uint64_t)5927096965052576591)
#define _OPTION_OA_NM ((uint64_t)84999000896591)
#define _OPTION_OA_MAPQ ((uint64_t)5859254915775411535)
#define _OPTION_OC_Z ((uint64_t)1513767759)
#define _OPTION_OP_i ((uint64_t)1765429327)
#define _OPTION_X0_i ((uint64_t)1765421144)
#define _OPTION_X1_i ((uint64_t)1765421400)
#define _OPTION_XC_i ((uint64_t)1765426008)
#define _OPTION_XN_i ((uint64_t)1765428824)
#define _OPTION_XM_i ((uint64_t)1765428568)
#define _OPTION_XO_i ((uint64_t)1765429080)
#define _OPTION_XG_i ((uint64_t)1765427032)
#define _OPTION_XT_A ((uint64_t)1094341720)
#define _OPTION_XS_i ((uint64_t)1765430104)
#define _OPTION_XE_i ((uint64_t)1765426520)
#define _OPTION_XA_Z ((uint64_t)1513767256)
#define _OPTION_XA_LOOKBACK ((uint64_t)5423250129605975640)
#define _OPTION_XA_RNAME ((uint64_t)4993719366685110360)
#define _OPTION_XA_STRAND ((uint64_t)4921943264803762520)
#define _OPTION_XA_POS ((uint64_t)23449629681070680)
#define _OPTION_XA_CIGAR ((uint64_t)5927096965052576600)
#define _OPTION_XA_NM ((uint64_t)84999000896600)
#define _OPTION_XA_STRAND_POS ((uint64_t)6003105198858384728)
#define _OPTION_TS_A ((uint64_t)1094341460)
#define _OPTION_YF_Z ((uint64_t)1513768537)
#define _OPTION_YS_i ((uint64_t)1765430105)
#define _OPTION_YT_Z ((uint64_t)1513772121)
#define _OPTION_XA_i ((uint64_t)1765425496)
#define _OPTION_ZS_i ((uint64_t)1765430106)
#define _OPTION_Zs_Z ((uint64_t)1513780058)
#define _OPTION_Zs_POS ((uint64_t)23449629684346970)
#define _OPTION_Zs_TYPE ((uint64_t)4994590205667389786)
#define _OPTION_Zs_RS ((uint64_t)91613253808730)
#define _OPTION_ZA_i ((uint64_t)1765425498)
#define _OPTION_ZB_i ((uint64_t)1765425754)
#define _OPTION_ZC_B_i ((uint64_t)115698940134234)
#define _OPTION_ZF_i ((uint64_t)1765426778)
#define _OPTION_ZG_i ((uint64_t)1765427034)
#define _OPTION_ZM_B_s ((uint64_t)126694056414554)
#define _OPTION_ZP_B_f ((uint64_t)112400405254234)
#define _OPTION_ZT_Z ((uint64_t)1513772122)
#define _OPTION_ZE_Z ((uint64_t)1513768282)
#define _OPTION_YE_Z ((uint64_t)1513768281)
#define _OPTION_ZK_Z ((uint64_t)1513769818)
#define _OPTION_YK_Z ((uint64_t)1513769817)
#define _OPTION_nM_i ((uint64_t)1765428590)
#define _OPTION_jM_B_c ((uint64_t)109101870370154)
#define _OPTION_jI_B_I ((uint64_t)80514568046954)
#define _OPTION_XS_A ((uint64_t)1094341464)
#define _OPTION_uT_A ((uint64_t)1094341749)
#define _OPTION_vA_i ((uint64_t)1765425526)
#define _OPTION_vG_Z ((uint64_t)1513768822)
#define _OPTION_vW_i ((uint64_t)1765431158)
#define _OPTION_UR_Z ((uint64_t)1513771605)
#define _OPTION_UB_Z ((uint64_t)1513767509)
#define _OPTION_UY_Z ((uint64_t)1513773397)
#define _OPTION_GN_Z ((uint64_t)1513770567)
#define _OPTION_GX_Z ((uint64_t)1513773127)
#define _OPTION_gn_Z ((uint64_t)1513778791)
#define _OPTION_gx_Z ((uint64_t)1513781351)
#define _OPTION_sS_Z ((uint64_t)1513771891)
#define _OPTION_sQ_Z ((uint64_t)1513771379)
#define _OPTION_sM_Z ((uint64_t)1513770355)
#define _OPTION_fx_Z ((uint64_t)1513781350)
#define _OPTION_TX_Z ((uint64_t)1513773140)
#define _OPTION_TX_LOOKBACK ((uint64_t)5423250129607482964)
#define _OPTION_TX_NEGATIVE ((uint64_t)20060926255837524)
#define _OPTION_TX_GENE ((uint64_t)4994005209645068884)
#define _OPTION_TX_STRAND ((uint64_t)4921943264805270356)
#define _OPTION_TX_POS ((uint64_t)23449629682578516)
#define _OPTION_TX_CIGAR ((uint64_t)5927096965054084436)
#define _OPTION_TX_SAM_POS ((uint64_t)6003105147320284756)
#define _OPTION_AN_Z ((uint64_t)1513770561)
#define _OPTION_AN_LOOKBACK ((uint64_t)5423250129606827585)
#define _OPTION_AN_NEGATIVE ((uint64_t)20060926255182145)
#define _OPTION_AN_GENE ((uint64_t)4994005209644413505)
#define _OPTION_AN_STRAND ((uint64_t)4921943264804614977)
#define _OPTION_AN_POS ((uint64_t)23449629681923137)
#define _OPTION_AN_CIGAR ((uint64_t)5927096965053429057)
#define _OPTION_AN_SAM_POS ((uint64_t)6003105147319629377)
#define _OPTION_GR_Z ((uint64_t)1513771591)
#define _OPTION_GR_Z_X ((uint64_t)379556343879)
#define _OPTION_GY_Z ((uint64_t)1513773383)
#define _OPTION_GY_Z_X ((uint64_t)379556802631)
#define _OPTION_2R_Z ((uint64_t)1513771570)
#define _OPTION_2Y_Z ((uint64_t)1513773362)
#define _OPTION_2Y_DOMQRUNS ((uint64_t)5858425845354934322)
#define _OPTION_2Y_QUALMPLX ((uint64_t)6362548666810052914)
#define _OPTION_2Y_DIVRQUAL ((uint64_t)5860948125029052978)
#define _OPTION_RX_Z ((uint64_t)1513773138)
#define _OPTION_RX_Z_X ((uint64_t)379556737106)
#define _OPTION_BX_Z ((uint64_t)1513773122)
#define _OPTION_QX_Z ((uint64_t)1513773137)
#define _OPTION_QX_DOMQRUNS ((uint64_t)5858425845354868753)
#define _OPTION_QX_QUALMPLX ((uint64_t)6362548666809987345)
#define _OPTION_QX_DIVRQUAL ((uint64_t)5860948125028987409)
#define _OPTION_TR_Z ((uint64_t)1513771604)
#define _OPTION_TQ_Z ((uint64_t)1513771348)
#define _OPTION_TQ_DOMQRUNS ((uint64_t)5858425845354410004)
#define _OPTION_TQ_QUALMPLX ((uint64_t)6362548666809528596)
#define _OPTION_TQ_DIVRQUAL ((uint64_t)5860948125028528660)
#define _OPTION_PC_i ((uint64_t)1765426000)
#define _OPTION_PS_i ((uint64_t)1765430096)
#define _OPTION_HP_i ((uint64_t)1765429320)
#define _OPTION_MI_i ((uint64_t)1765427533)
#define _OPTION_AM_A ((uint64_t)1094339905)
#define _OPTION_XM_A ((uint64_t)1094339928)
#define _OPTION_DM_Z ((uint64_t)1513770308)
#define _OPTION_XL_i ((uint64_t)1765428312)
#define _OPTION_XQ_i ((uint64_t)1765429592)
#define _OPTION_XT_i ((uint64_t)1765430360)
#define _OPTION_cx_i ((uint64_t)1765439587)
#define _OPTION_qs_i ((uint64_t)1765438321)
#define _OPTION_qe_i ((uint64_t)1765434737)
#define _OPTION_ws_i ((uint64_t)1765438327)
#define _OPTION_we_i ((uint64_t)1765434743)
#define _OPTION_zm_i ((uint64_t)1765436794)
#define _OPTION_np_i ((uint64_t)1765437550)
#define _OPTION_ec_f ((uint64_t)1715102565)
#define _OPTION_rq_f ((uint64_t)1715106162)
#define _OPTION_sn_B_f ((uint64_t)112400405261939)
#define _OPTION_dq_Z ((uint64_t)1513779556)
#define _OPTION_dt_Z ((uint64_t)1513780324)
#define _OPTION_iq_Z ((uint64_t)1513779561)
#define _OPTION_mq_Z ((uint64_t)1513779565)
#define _OPTION_sq_Z ((uint64_t)1513779571)
#define _OPTION_st_Z ((uint64_t)1513780339)
#define _OPTION_ip_B_C ((uint64_t)73917498290281)
#define _OPTION_pw_B_C ((uint64_t)73917498292080)
#define _OPTION_fi_B_C ((uint64_t)73917498288486)
#define _OPTION_ri_B_C ((uint64_t)73917498288498)
#define _OPTION_fp_B_C ((uint64_t)73917498290278)
#define _OPTION_rp_B_C ((uint64_t)73917498290290)
#define _OPTION_fn_i ((uint64_t)1765437030)
#define _OPTION_rn_i ((uint64_t)1765437042)
#define _OPTION_sz_A ((uint64_t)1096776307)
#define _OPTION_sc_A ((uint64_t)1096770419)
#define _OPTION_ms_i ((uint64_t)1765438317)
#define _OPTION_mc_i ((uint64_t)1765434221)
#define _OPTION_cq_Z ((uint64_t)1513779555)
#define _OPTION_Z5_i ((uint64_t)1765422426)
#define _OPTION_Zq_i ((uint64_t)1765437786)
#define _OPTION_YH_Z ((uint64_t)1513769049)
#define _OPTION_YQ_Z ((uint64_t)1513771353)
#define _OPTION_XR_i ((uint64_t)1765429848)
#define _OPTION_QS_i ((uint64_t)1765430097)
#define _OPTION_QE_i ((uint64_t)1765426513)
#define _OPTION_XI_f ((uint64_t)1715095896)
#define _OPTION_CV_f ((uint64_t)1715099203)
#define _OPTION_XP_Z ((uint64_t)1513771096)
#define _OPTION_XO_Z ((uint64_t)1513770840)
#define _OPTION_XM_Z ((uint64_t)1513770328)
#define _OPTION_XG_Z ((uint64_t)1513768792)
#define _OPTION_XB_Z ((uint64_t)1513767512)
#define _OPTION_YS_Z ((uint64_t)1513771865)
#define _OPTION_XR_Z ((uint64_t)1513771608)
#define _OPTION_XB_A ((uint64_t)1094337112)
#define _OPTION_X4_Z ((uint64_t)1513763928)
#define _OPTION_X5_Z ((uint64_t)1513764184)
#define _OPTION_md_Z ((uint64_t)1513776237)
#define _OPTION_BD_Z ((uint64_t)1513768002)
#define _OPTION_BI_Z ((uint64_t)1513769282)
#define _OPTION_BD_BI ((uint64_t)314646152258)
#define _OPTION_XQ_Z ((uint64_t)1513771352)
#define _OPTION_tp_A ((uint64_t)1094348916)
#define _OPTION_cm_i ((uint64_t)1765436771)
#define _OPTION_s1_i ((uint64_t)1765421427)
#define _OPTION_s2_i ((uint64_t)1765421683)
#define _OPTION_nn_i ((uint64_t)1765437038)
#define _OPTION_ts_A ((uint64_t)1094349684)
#define _OPTION_cs_Z ((uint64_t)1513780067)
#define _OPTION_dv_f ((uint64_t)1715107428)
#define _OPTION_de_f ((uint64_t)1715103076)
#define _OPTION_rl_i ((uint64_t)1765436530)
#define _OPTION_tx_i ((uint64_t)1765439604)
#define _OPTION_CIGAR ((uint64_t)90440322335552)
#define _SAM_E2_Z ((uint64_t)1513763333)
#define _SAM_U2_Z ((uint64_t)1513763349)
#define _FASTQ_CONTIG ((uint64_t)78380272602883)
#define _FASTQ_DESC ((uint64_t)1129530628)
#define _FASTQ_Q0NAME ((uint64_t)76198110441681)
#define _FASTQ_Q1NAME ((uint64_t)76198110441937)
#define _FASTQ_Q2NAME ((uint64_t)76198110442193)
#define _FASTQ_Q3NAME ((uint64_t)76198110442449)
#define _FASTQ_Q4NAME ((uint64_t)76198110442705)
#define _FASTQ_Q5NAME ((uint64_t)76198110442961)
#define _FASTQ_Q6NAME ((uint64_t)76198110443217)
#define _FASTQ_Q7NAME ((uint64_t)76198110443473)
#define _FASTQ_Q8NAME ((uint64_t)76198110443729)
#define _FASTQ_Q9NAME ((uint64_t)76198110443985)
#define _FASTQ_QANAME ((uint64_t)76198110446033)
#define _FASTQ_QBNAME ((uint64_t)76198110446289)
#define _FASTQ_QmNAME ((uint64_t)76198110457297)
#define _FASTQ_QNAME2 ((uint64_t)55273230257873)
#define _FASTQ_Q0NAME2 ((uint64_t)76198110441713)
#define _FASTQ_Q1NAME2 ((uint64_t)76198110441969)
#define _FASTQ_Q2NAME2 ((uint64_t)76198110442225)
#define _FASTQ_Q3NAME2 ((uint64_t)76198110442481)
#define _FASTQ_Q4NAME2 ((uint64_t)76198110442737)
#define _FASTQ_Q5NAME2 ((uint64_t)76198110442993)
#define _FASTQ_Q6NAME2 ((uint64_t)76198110443249)
#define _FASTQ_Q7NAME2 ((uint64_t)76198110443505)
#define _FASTQ_Q8NAME2 ((uint64_t)76198110443761)
#define _FASTQ_Q9NAME2 ((uint64_t)76198110444017)
#define _FASTQ_QANAME2 ((uint64_t)76198110446065)
#define _FASTQ_QBNAME2 ((uint64_t)76198110446321)
#define _FASTQ_E1L ((uint64_t)4993285)
#define _FASTQ_SQBITMAP ((uint64_t)5782988420922102035)
#define _FASTQ_NONREF ((uint64_t)77263547551502)
#define _FASTQ_NONREF_X ((uint64_t)6367885661672722190)
#define _FASTQ_GPOS ((uint64_t)1397706759)
#define _FASTQ_STRAND ((uint64_t)75102894052371)
#define _FASTQ_SEQMIS_A ((uint64_t)4710575309547717907)
#define _FASTQ_SEQMIS_C ((uint64_t)4854690497623573779)
#define _FASTQ_SEQMIS_G ((uint64_t)5142920873775285523)
#define _FASTQ_SEQMIS_T ((uint64_t)6079669596268348691)
#define _FASTQ_E2L ((uint64_t)4993541)
#define _FASTQ_QUAL ((uint64_t)1279350033)
#define _FASTQ_DOMQRUNS ((uint64_t)6002829165371150084)
#define _FASTQ_QUALMPLX ((uint64_t)6362548666489722129)
#define _FASTQ_DIVRQUAL ((uint64_t)5494766828130814212)
#define _FASTQ_TOPLEVEL ((uint64_t)5495893775908622100)
#define _FASTQ_TAXID ((uint64_t)293288296724)
#define _FASTQ_DEBUG_LINES ((uint64_t)6000288155260371460)
#define _FASTQ_LINE3 ((uint64_t)220206090508)
#define _FASTQ_T0HIRD ((uint64_t)76198110441716)
#define _FASTQ_T1HIRD ((uint64_t)76198110441972)
#define _FASTQ_T2HIRD ((uint64_t)76198110442228)
#define _FASTQ_T3HIRD ((uint64_t)76198110442484)
#define _FASTQ_T4HIRD ((uint64_t)76198110442740)
#define _FASTQ_T5HIRD ((uint64_t)76198110442996)
#define _FASTQ_T6HIRD ((uint64_t)76198110443252)
#define _FASTQ_T7HIRD ((uint64_t)76198110443508)
#define _FASTQ_COPY_Q ((uint64_t)133523812078068)
#define _FASTA_CONTIG ((uint64_t)78380272602883)
#define _FASTA_LINEMETA ((uint64_t)4707463708686567692)
#define _FASTA_EOL ((uint64_t)5000965)
#define _FASTA_DESC ((uint64_t)1129530628)
#define _FASTA_COMMENT ((uint64_t)23729957600317187)
#define _FASTA_NONREF ((uint64_t)77263547551502)
#define _FASTA_NONREF_X ((uint64_t)6367885661672722190)
#define _FASTA_TOPLEVEL ((uint64_t)5495893775908622100)
#define _FASTA_TAXID ((uint64_t)293288296724)
#define _FASTA_DEBUG_LINES ((uint64_t)6000288155260371460)
#define _GFF_SEQID ((uint64_t)293287838995)
#define _GFF_SOURCE ((uint64_t)76155446447891)
#define _GFF_TYPE ((uint64_t)1162893588)
#define _GFF_START ((uint64_t)362157265939)
#define _GFF_END ((uint64_t)4476421)
#define _GFF_SCORE ((uint64_t)297733669651)
#define _GFF_STRAND ((uint64_t)75102894052371)
#define _GFF_PHASE ((uint64_t)297749530640)
#define _GFF_ATTRS ((uint64_t)357863543809)
#define _GFF_EOL ((uint64_t)5000965)
#define _GFF_TOPLEVEL ((uint64_t)5495893775908622100)
#define _GFF_COMMENT ((uint64_t)23729957600317187)
#define _GFF_DEBUG_LINES ((uint64_t)6000288155260371460)
#define _ATTR_ID ((uint64_t)17609)
#define _ATTR_Name ((uint64_t)1701667278)
#define _ATTR_Alias ((uint64_t)495555538113)
#define _ATTR_Parent ((uint64_t)128017497219536)
#define _ATTR_Target ((uint64_t)127978876068308)
#define _ATTR_Target_ID ((uint64_t)75082276221396)
#define _ATTR_Target_POS ((uint64_t)23449630035882708)
#define _ATTR_Target_STRAND ((uint64_t)4921943265158575060)
#define _ATTR_Gap ((uint64_t)7365063)
#define _ATTR_Derives_from ((uint64_t)7885647256730363332)
#define _ATTR_Note ((uint64_t)1702129614)
#define _ATTR_Dbxref ((uint64_t)112585898222276)
#define _ATTR_db_xref ((uint64_t)28821989944681188)
#define _ATTR_Ontology_term ((uint64_t)7886477448239673039)
#define _ATTR_Is_circular ((uint64_t)8241988044498891721)
#define _ATTR_Variant_seq ((uint64_t)8171063952561824214)
#define _ATTR_Reference_seq ((uint64_t)8171063952493929938)
#define _ATTR_Variant_freq ((uint64_t)8171062883114967510)
#define _ATTR_ancestral_allele ((uint64_t)7308327811547360993)
#define _ATTR_Variant_effect ((uint64_t)8386658421624168918)
#define _ATTR_sift_prediction ((uint64_t)7957695015476947443)
#define _ATTR_polyphen_prediction ((uint64_t)7957695015561228272)
#define _ATTR_variant_peptide ((uint64_t)7306080444208013814)
#define _ATTR_gene_id ((uint64_t)28263356115609063)
#define _ATTR_gene_name ((uint64_t)7308604897068213735)
#define _ATTR_transcript_id ((uint64_t)7235419230020137716)
#define _ATTR_transcript_name ((uint64_t)7308604897218360052)
#define _ATTR_transcript_name_gene ((uint64_t)7308604897001353460)
#define _ATTR_transcript_name_num ((uint64_t)7308604897001353716)
#define _ATTR_protein_id ((uint64_t)7235419204351914736)
#define _ATTR_ccds_id ((uint64_t)28263356349834211)
#define _ATTR_exon_id ((uint64_t)28263356266674405)
#define _ATTR_exon_number ((uint64_t)8243102915115317477)
#define _ATTR_chr ((uint64_t)7497955)
#define _ENSTid ((uint64_t)110403549089349)
#define _ME23_CHROM ((uint64_t)332043274243)
#define _ME23_POS ((uint64_t)5459728)
#define _ME23_ID ((uint64_t)17417)
#define _ME23_GENOTYPE ((uint64_t)4994590205396534535)
#define _ME23_EOL ((uint64_t)5000965)
#define _ME23_TOPLEVEL ((uint64_t)5495893775908622100)
#define _ME23_TOP2VCF ((uint64_t)19777285860118292)
#define _ME23_DEBUG_LINES ((uint64_t)6000288155260371460)
#define _GNRIC_DATA ((uint64_t)1096040708)
#define _GNRIC_TOPLEVEL ((uint64_t)5495893775908622100)
#define _PHY_ID ((uint64_t)17417)
#define _PHY_SEQ ((uint64_t)5326099)
#define _PHY_EOL ((uint64_t)5000965)
#define _PHY_TOPLEVEL ((uint64_t)5495893775908622100)
#define _PHY_TOP2FASTA ((uint64_t)71769747640084)
#define _PHY_DEBUG_LINES ((uint64_t)6000288155260371460)
#define _CHAIN_NAMELUFT ((uint64_t)6072634933624267022)
#define _CHAIN_STRNDLUFT ((uint64_t)6072634933607559699)
#define _CHAIN_STARTLUFT ((uint64_t)6072634933876257811)
#define _CHAIN_ENDLUFT ((uint64_t)23721230209412613)
#define _CHAIN_SIZELUFT ((uint64_t)6072634933625121043)
#define _CHAIN_NAMEPRIM ((uint64_t)5569072918933881102)
#define _CHAIN_STRNDPRIM ((uint64_t)5569072918917173779)
#define _CHAIN_STARTPRIM ((uint64_t)5569072919185871891)
#define _CHAIN_ENDPRIM ((uint64_t)21754191089520133)
#define _CHAIN_SIZEPRIM ((uint64_t)5569072918934735123)
#define _CHAIN_CHAIN ((uint64_t)336236464131)
#define _CHAIN_SCORE ((uint64_t)297733669651)
#define _CHAIN_ID ((uint64_t)17417)
#define _CHAIN_VERIFIED ((uint64_t)4919418734198801686)
#define _CHAIN_SET ((uint64_t)5522707)
#define _CHAIN_SIZE ((uint64_t)1163544851)
#define _CHAIN_GAPS ((uint64_t)1397768455)
#define _CHAIN_EOL ((uint64_t)5000965)
#define _CHAIN_TOPLEVEL ((uint64_t)5495893775908622100)
#define _CHAIN_SEP ((uint64_t)5260563)
#define _CHAIN_DEBUG_LINES ((uint64_t)6000288155260371460)
#define _KRAKEN_CU ((uint64_t)21763)
#define _KRAKEN_QNAME ((uint64_t)297648868881)
#define _KRAKEN_Q0NAME ((uint64_t)76198110441681)
#define _KRAKEN_Q1NAME ((uint64_t)76198110441937)
#define _KRAKEN_Q2NAME ((uint64_t)76198110442193)
#define _KRAKEN_Q3NAME ((uint64_t)76198110442449)
#define _KRAKEN_Q4NAME ((uint64_t)76198110442705)
#define _KRAKEN_Q5NAME ((uint64_t)76198110442961)
#define _KRAKEN_Q6NAME ((uint64_t)76198110443217)
#define _KRAKEN_Q7NAME ((uint64_t)76198110443473)
#define _KRAKEN_Q8NAME ((uint64_t)76198110443729)
#define _KRAKEN_Q9NAME ((uint64_t)76198110443985)
#define _KRAKEN_QANAME ((uint64_t)76198110446033)
#define _KRAKEN_QBNAME ((uint64_t)76198110446289)
#define _KRAKEN_QmNAME ((uint64_t)76198110457297)
#define _KRAKEN_TAXID ((uint64_t)293288296724)
#define _KRAKEN_SEQLEN ((uint64_t)86059540104467)
#define _KRAKEN_SEQLEN_1 ((uint64_t)22031242266751315)
#define _KRAKEN_SEQLEN_2 ((uint64_t)22031242266751571)
#define _KRAKEN_KMERS ((uint64_t)357862558987)
#define _KRAKEN_KMERTAX ((uint64_t)24841628363869451)
#define _KRAKEN_KMERLEN ((uint64_t)22031242283535627)
#define _KRAKEN_EOL ((uint64_t)5000965)
#define _KRAKEN_TOPLEVEL ((uint64_t)5495893775908622100)
#define _KRAKEN_TOP2TAXID ((uint64_t)5211580972135370516)
#define _KRAKEN_DEBUG_LINES ((uint64_t)6000288155260371460)
#define _LOCS_X ((uint64_t)24)
#define _LOCS_Y ((uint64_t)25)
#define _LOCS_TOPLEVEL ((uint64_t)5495893775908622100)
#define _LOCS_DEBUG_LINES ((uint64_t)6000288155260371460)

typedef enum { REF_CONTIG, NUM_REF_FIELDS } REFFields;

#define REF_PREDEFINED { \
    [REF_CONTIG] = { { _REF_CONTIG }, TAG(CONTIG) }, \
} 

typedef enum { VCF_CHROM, VCF_POS, VCF_ID, VCF_REFALT, VCF_QUAL, VCF_FILTER, VCF_INFO, VCF_FORMAT, VCF_SAMPLES, VCF_LOOKBACK, VCF_EOL, VCF_TOPLEVEL, VCF_oCHROM, VCF_oPOS, VCF_oREFALT, VCF_oXSTRAND, VCF_COORDS, VCF_oSTATUS, VCF_COPYPOS, VCF_LIFT_REF, VCF_COPYSTAT, VCF_TOPLUFT, VCF_LINE_NUM, VCF_DEBUG_LINES, FORMAT_AD, FORMAT_ADALL, FORMAT_ADF, FORMAT_ADR, FORMAT_AF, FORMAT_DP, FORMAT_DS, FORMAT_GL, FORMAT_GP, FORMAT_GQ, FORMAT_GT, FORMAT_PL, FORMAT_PLy, FORMAT_PLn, FORMAT_PRI, FORMAT_F1R2, FORMAT_F2R1, FORMAT_MB, FORMAT_PP, FORMAT_SAC, FORMAT_SB, FORMAT_PS, FORMAT_PSpos, FORMAT_PSalt, FORMAT_PSref, FORMAT_PID, FORMAT_PGT, FORMAT_FL, FORMAT_AB, FORMAT_AB3, FORMAT_GT_HT, FORMAT_GT_HT_INDEX, FORMAT_PBWT_RUNS, FORMAT_PBWT_FGRC, INFO_AC, INFO_AF, INFO_AN, INFO_AA, INFO_BaseCounts, INFO_DP, INFO_DP4, INFO_SF, INFO_VQSLOD, INFO_MQ, INFO_MQ0, INFO_CIPOS, INFO_CIEND, INFO_NS, INFO_ANN, INFO_ANN_Allele, INFO_ANN_Annotation, INFO_ANN_Annotation_Impact, INFO_ANN_Gene_Name, INFO_ANN_Gene_ID, INFO_ANN_Feature_Type, INFO_ANN_Feature_ID, INFO_ANN_Transcript_BioType, INFO_ANN_Rank, INFO_ANN_HGVS_c, INFO_ANN_HGVS_p, INFO_ANN_cDNA, INFO_ANN_CDS, INFO_ANN_AA, INFO_ANN_Distance, INFO_ANN_Errors, INFO_END, INFO_MLEAC, INFO_MLEAF, INFO_LDAF, INFO_SOR, INFO_QD, INFO_RAW_MQandDP, INFO_RAW_MQandDP_MQ, INFO_RAW_MQandDP_DP, FORMAT_RGQ, FORMAT_MIN_DP, FORMAT_BX, FORMAT_PQ, FORMAT_JQ, INFO_vep, INFO_AGE_HISTOGRAM_HET, INFO_AGE_HISTOGRAM_HOM, INFO_MAX_AF, INFO_CSQ, INFO_CSQ_Allele, INFO_CSQ_Consequence, INFO_CSQ_IMPACT, INFO_CSQ_SYMBOL, INFO_CSQ_Gene, INFO_CSQ_Feature, INFO_CSQ_EXON, INFO_CSQ_INTRON, INFO_CSQ_HGVSc, INFO_CSQ_HGVSp, INFO_CSQ_cDNA_position, INFO_CSQ_CDS_position, INFO_CSQ_Protein_position, INFO_CSQ_Amino_acids, INFO_CSQ_Codons, INFO_CSQ_Existing_variation, INFO_CSQ_ALLELE_NUM, INFO_CSQ_DISTANCE, INFO_CSQ_STRAND, INFO_CSQ_FLAGS, INFO_CSQ_VARIANT_CLASS, INFO_CSQ_MINIMISED, INFO_CSQ_SYMBOL_SOURCE, INFO_CSQ_HGNC_ID, INFO_CSQ_CANONICAL, INFO_CSQ_TSL, INFO_CSQ_APPRIS, INFO_CSQ_CCDS, INFO_CSQ_ENSP, INFO_CSQ_SWISSPROT, INFO_CSQ_TREMBL, INFO_CSQ_UNIPARC, INFO_CSQ_GENE_PHENO, INFO_CSQ_SIFT, INFO_CSQ_PolyPhen, INFO_CSQ_DOMAINS, INFO_CSQ_HGVS_OFFSET, INFO_CSQ_AF, INFO_CSQ_CLIN_SIG, INFO_CSQ_SOMATIC, INFO_CSQ_PHENO, INFO_CSQ_PUBMED, INFO_CSQ_MOTIF_NAME, INFO_CSQ_MOTIF_POS, INFO_CSQ_HIGH_INF_POS, INFO_CSQ_MOTIF_SCORE_CHANGE, INFO_CSQ_LoF, INFO_CSQ_LoF_filter, INFO_CSQ_LoF_flags, INFO_CSQ_LoF_info, INFO_CSQ_context, INFO_CSQ_ancestral, INFO_ALLELEID, INFO_CLNDN, INFO_CLNHGVS, INFO_CLNVI, INFO_HGVS_snp_pos, INFO_HGVS_snp_refalt, INFO_HGVS_del_start_pos, INFO_HGVS_del_end_pos, INFO_HGVS_del_payload, INFO_HGVS_ins_start_pos, INFO_HGVS_ins_end_pos, INFO_HGVS_ins_payload, INFO_HGVS_delins_end_pos, INFO_HGVS_delins_payload, INFO_DP_HIST, INFO_GQ_HIST, INFO_SVLEN, INFO_SVTYPE, FORMAT_RDF, FORMAT_RDR, FORMAT_SDP, FORMAT_RD, FORMAT_FREQ, FORMAT_PVAL, FORMAT_RBQ, FORMAT_ABQ, INFO_ADP, INFO_WT, INFO_HET, INFO_HOM, INFO_NC, INFO_RS, INFO_RSPOS, INFO_TOPMED, INFO_dbSNPBuildID, INFO_GENEINFO, INFO_PROBE_A, INFO_PROBE_B, INFO_ALLELE_A, INFO_ALLELE_B, INFO_refSNP, INFO_ILLUMINA_CHR, INFO_ILLUMINA_POS, INFO_ILLUMINA_STRAND, FORMAT_BAF, FORMAT_X, FORMAT_Y, INFO_AR2, INFO_DR2, INFO_IMP, FORMAT_RC, FORMAT_AC, INFO_RSID, FORMAT_NS, FORMAT_EZ, FORMAT_SI, FORMAT_NC, FORMAT_ES, FORMAT_SE, FORMAT_LP, FORMAT_ID, INFO_LUFT, INFO_PRIM, INFO_LREJ, INFO_PREJ, NUM_VCF_FIELDS } VCFFields;

#define VCF_PREDEFINED { \
    [VCF_CHROM] = { { _VCF_CHROM }, TAG(CHROM) }, \
    [VCF_POS] = { { _VCF_POS }, TAG(POS) }, \
    [VCF_ID] = { { _VCF_ID }, TAG(ID) }, \
    [VCF_REFALT] = { { _VCF_REFALT }, TAG(REF+ALT) }, \
    [VCF_QUAL] = { { _VCF_QUAL }, TAG(QUAL) }, \
    [VCF_FILTER] = { { _VCF_FILTER }, TAG(FILTER) }, \
    [VCF_INFO] = { { _VCF_INFO }, TAG(INFO) }, \
    [VCF_FORMAT] = { { _VCF_FORMAT }, TAG(FORMAT) }, \
    [VCF_SAMPLES] = { { _VCF_SAMPLES }, TAG(SAMPLES) }, \
    [VCF_LOOKBACK] = { { _VCF_LOOKBACK }, TAG(LOOKBACK) }, \
    [VCF_EOL] = { { _VCF_EOL }, TAG(EOL) }, \
    [VCF_TOPLEVEL] = { { _VCF_TOPLEVEL }, TAG(TOPLEVEL) }, \
    [VCF_oCHROM] = { { _VCF_oCHROM }, TAG(oCHROM) }, \
    [VCF_oPOS] = { { _VCF_oPOS }, TAG(oPOS) }, \
    [VCF_oREFALT] = { { _VCF_oREFALT }, TAG(oREFALT) }, \
    [VCF_oXSTRAND] = { { _VCF_oXSTRAND }, TAG(oXSTRAND) }, \
    [VCF_COORDS] = { { _VCF_COORDS }, TAG(COORDS) }, \
    [VCF_oSTATUS] = { { _VCF_oSTATUS }, TAG(o$TATUS) }, \
    [VCF_COPYPOS] = { { _VCF_COPYPOS }, TAG(C0PYPOS) }, \
    [VCF_LIFT_REF] = { { _VCF_LIFT_REF }, TAG(LIFT_REF) }, \
    [VCF_COPYSTAT] = { { _VCF_COPYSTAT }, TAG(CoPYSTAT) }, \
    [VCF_TOPLUFT] = { { _VCF_TOPLUFT }, TAG(ToPLUFT) }, \
    [VCF_LINE_NUM] = { { _VCF_LINE_NUM }, TAG(LINE_NUM) }, \
    [VCF_DEBUG_LINES] = { { _VCF_DEBUG_LINES }, TAG(DBGLINES) }, \
    [FORMAT_AD] = { { _FORMAT_AD }, TAG(AD) }, \
    [FORMAT_ADALL] = { { _FORMAT_ADALL }, TAG(ADALL) }, \
    [FORMAT_ADF] = { { _FORMAT_ADF }, TAG(ADF) }, \
    [FORMAT_ADR] = { { _FORMAT_ADR }, TAG(ADR) }, \
    [FORMAT_AF] = { { _FORMAT_AF }, TAG(AF) }, \
    [FORMAT_DP] = { { _FORMAT_DP }, TAG(DP) }, \
    [FORMAT_DS] = { { _FORMAT_DS }, TAG(DS) }, \
    [FORMAT_GL] = { { _FORMAT_GL }, TAG(GL) }, \
    [FORMAT_GP] = { { _FORMAT_GP }, TAG(GP) }, \
    [FORMAT_GQ] = { { _FORMAT_GQ }, TAG(GQ) }, \
    [FORMAT_GT] = { { _FORMAT_GT }, TAG(GT) }, \
    [FORMAT_PL] = { { _FORMAT_PL }, TAG(PL) }, \
    [FORMAT_PLy] = { { _FORMAT_PLy }, TAG(PLy) }, \
    [FORMAT_PLn] = { { _FORMAT_PLn }, TAG(PLn) }, \
    [FORMAT_PRI] = { { _FORMAT_PRI }, TAG(PRI) }, \
    [FORMAT_F1R2] = { { _FORMAT_F1R2 }, TAG(F1R2) }, \
    [FORMAT_F2R1] = { { _FORMAT_F2R1 }, TAG(F2R1) }, \
    [FORMAT_MB] = { { _FORMAT_MB }, TAG(MB) }, \
    [FORMAT_PP] = { { _FORMAT_PP }, TAG(PP) }, \
    [FORMAT_SAC] = { { _FORMAT_SAC }, TAG(SAC) }, \
    [FORMAT_SB] = { { _FORMAT_SB }, TAG(SB) }, \
    [FORMAT_PS] = { { _FORMAT_PS }, TAG(PS) }, \
    [FORMAT_PSpos] = { { _FORMAT_PSpos }, TAG(PSpos) }, \
    [FORMAT_PSalt] = { { _FORMAT_PSalt }, TAG(PSalt) }, \
    [FORMAT_PSref] = { { _FORMAT_PSref }, TAG(PSref) }, \
    [FORMAT_PID] = { { _FORMAT_PID }, TAG(PID) }, \
    [FORMAT_PGT] = { { _FORMAT_PGT }, TAG(PGT) }, \
    [FORMAT_FL] = { { _FORMAT_FL }, TAG(FL) }, \
    [FORMAT_AB] = { { _FORMAT_AB }, TAG(AB) }, \
    [FORMAT_AB3] = { { _FORMAT_AB3 }, TAG(AB3) }, \
    [FORMAT_GT_HT] = { { _FORMAT_GT_HT }, TAG(@HT) }, \
    [FORMAT_GT_HT_INDEX] = { { _FORMAT_GT_HT_INDEX }, TAG(@INDEXHT) }, \
    [FORMAT_PBWT_RUNS] = { { _FORMAT_PBWT_RUNS }, TAG(@1BWTRUN) }, \
    [FORMAT_PBWT_FGRC] = { { _FORMAT_PBWT_FGRC }, TAG(@2BWTFGR) }, \
    [INFO_AC] = { { _INFO_AC }, TAG(AC) }, \
    [INFO_AF] = { { _INFO_AF }, TAG(AF) }, \
    [INFO_AN] = { { _INFO_AN }, TAG(AN) }, \
    [INFO_AA] = { { _INFO_AA }, TAG(AA) }, \
    [INFO_BaseCounts] = { { _INFO_BaseCounts }, TAG(BaseCounts) }, \
    [INFO_DP] = { { _INFO_DP }, TAG(DP) }, \
    [INFO_DP4] = { { _INFO_DP4 }, TAG(DP4) }, \
    [INFO_SF] = { { _INFO_SF }, TAG(SF) }, \
    [INFO_VQSLOD] = { { _INFO_VQSLOD }, TAG(VQSLOD) }, \
    [INFO_MQ] = { { _INFO_MQ }, TAG(MQ) }, \
    [INFO_MQ0] = { { _INFO_MQ0 }, TAG(MQ0) }, \
    [INFO_CIPOS] = { { _INFO_CIPOS }, TAG(CIPOS) }, \
    [INFO_CIEND] = { { _INFO_CIEND }, TAG(CIEND) }, \
    [INFO_NS] = { { _INFO_NS }, TAG(NS) }, \
    [INFO_ANN] = { { _INFO_ANN }, TAG(ANN) }, \
    [INFO_ANN_Allele] = { { _INFO_ANN_Allele }, TAG(@ANN_Allele) }, \
    [INFO_ANN_Annotation] = { { _INFO_ANN_Annotation }, TAG(A1Annotation) }, \
    [INFO_ANN_Annotation_Impact] = { { _INFO_ANN_Annotation_Impact }, TAG(A2Annotation_Impact) }, \
    [INFO_ANN_Gene_Name] = { { _INFO_ANN_Gene_Name }, TAG(A3Gene_Name) }, \
    [INFO_ANN_Gene_ID] = { { _INFO_ANN_Gene_ID }, TAG(A4Gene_ID) }, \
    [INFO_ANN_Feature_Type] = { { _INFO_ANN_Feature_Type }, TAG(A5Feature_Type) }, \
    [INFO_ANN_Feature_ID] = { { _INFO_ANN_Feature_ID }, TAG(A6Feature_ID) }, \
    [INFO_ANN_Transcript_BioType] = { { _INFO_ANN_Transcript_BioType }, TAG(A7Transcript_BioType) }, \
    [INFO_ANN_Rank] = { { _INFO_ANN_Rank }, TAG(A8Rank) }, \
    [INFO_ANN_HGVS_c] = { { _INFO_ANN_HGVS_c }, TAG(A9HGVS_c) }, \
    [INFO_ANN_HGVS_p] = { { _INFO_ANN_HGVS_p }, TAG(AaHGVS_p) }, \
    [INFO_ANN_cDNA] = { { _INFO_ANN_cDNA }, TAG(AbcDNA) }, \
    [INFO_ANN_CDS] = { { _INFO_ANN_CDS }, TAG(AcCDS) }, \
    [INFO_ANN_AA] = { { _INFO_ANN_AA }, TAG(AdAA) }, \
    [INFO_ANN_Distance] = { { _INFO_ANN_Distance }, TAG(AeDistance) }, \
    [INFO_ANN_Errors] = { { _INFO_ANN_Errors }, TAG(AfErrors) }, \
    [INFO_END] = { { _INFO_END }, TAG(END) }, \
    [INFO_MLEAC] = { { _INFO_MLEAC }, TAG(MLEAC) }, \
    [INFO_MLEAF] = { { _INFO_MLEAF }, TAG(MLEAF) }, \
    [INFO_LDAF] = { { _INFO_LDAF }, TAG(LDAF) }, \
    [INFO_SOR] = { { _INFO_SOR }, TAG(SOR) }, \
    [INFO_QD] = { { _INFO_QD }, TAG(QD) }, \
    [INFO_RAW_MQandDP] = { { _INFO_RAW_MQandDP }, TAG(RAW_MQandDP) }, \
    [INFO_RAW_MQandDP_MQ] = { { _INFO_RAW_MQandDP_MQ }, TAG(R0AW_MQandDP) }, \
    [INFO_RAW_MQandDP_DP] = { { _INFO_RAW_MQandDP_DP }, TAG(R1AW_MQandDP) }, \
    [FORMAT_RGQ] = { { _FORMAT_RGQ }, TAG(RGQ) }, \
    [FORMAT_MIN_DP] = { { _FORMAT_MIN_DP }, TAG(MIN_DP) }, \
    [FORMAT_BX] = { { _FORMAT_BX }, TAG(BX) }, \
    [FORMAT_PQ] = { { _FORMAT_PQ }, TAG(PQ) }, \
    [FORMAT_JQ] = { { _FORMAT_JQ }, TAG(JQ) }, \
    [INFO_vep] = { { _INFO_vep }, TAG(vep) }, \
    [INFO_AGE_HISTOGRAM_HET] = { { _INFO_AGE_HISTOGRAM_HET }, TAG(AGE_HISTOGRAM_HET) }, \
    [INFO_AGE_HISTOGRAM_HOM] = { { _INFO_AGE_HISTOGRAM_HOM }, TAG(AGE_HISTOGRAM_HOM) }, \
    [INFO_MAX_AF] = { { _INFO_MAX_AF }, TAG(MAX_AF) }, \
    [INFO_CSQ] = { { _INFO_CSQ }, TAG(CSQ) }, \
    [INFO_CSQ_Allele] = { { _INFO_CSQ_Allele }, TAG(@CSQ_Allele) }, \
    [INFO_CSQ_Consequence] = { { _INFO_CSQ_Consequence }, TAG(c1SQ_Consequence) }, \
    [INFO_CSQ_IMPACT] = { { _INFO_CSQ_IMPACT }, TAG(c2SQ_IMPACT) }, \
    [INFO_CSQ_SYMBOL] = { { _INFO_CSQ_SYMBOL }, TAG(c3SQ_SYMBOL) }, \
    [INFO_CSQ_Gene] = { { _INFO_CSQ_Gene }, TAG(c4SQ_Gene) }, \
    [INFO_CSQ_Feature] = { { _INFO_CSQ_Feature }, TAG(c6SQ_Feature) }, \
    [INFO_CSQ_EXON] = { { _INFO_CSQ_EXON }, TAG(c8SQ_EXON) }, \
    [INFO_CSQ_INTRON] = { { _INFO_CSQ_INTRON }, TAG(c9SQ_INTRON) }, \
    [INFO_CSQ_HGVSc] = { { _INFO_CSQ_HGVSc }, TAG(caSQ_HGVSc) }, \
    [INFO_CSQ_HGVSp] = { { _INFO_CSQ_HGVSp }, TAG(cbSQ_HGVSp) }, \
    [INFO_CSQ_cDNA_position] = { { _INFO_CSQ_cDNA_position }, TAG(ccSQ_cDNA_position) }, \
    [INFO_CSQ_CDS_position] = { { _INFO_CSQ_CDS_position }, TAG(cdSQ_CDS_position) }, \
    [INFO_CSQ_Protein_position] = { { _INFO_CSQ_Protein_position }, TAG(ceSQ_Protein_position) }, \
    [INFO_CSQ_Amino_acids] = { { _INFO_CSQ_Amino_acids }, TAG(cfSQ_Amino_acids) }, \
    [INFO_CSQ_Codons] = { { _INFO_CSQ_Codons }, TAG(cgSQ_Codons) }, \
    [INFO_CSQ_Existing_variation] = { { _INFO_CSQ_Existing_variation }, TAG(chSQ_Existing_variation) }, \
    [INFO_CSQ_ALLELE_NUM] = { { _INFO_CSQ_ALLELE_NUM }, TAG(ciSQ_ALLELE_NUM) }, \
    [INFO_CSQ_DISTANCE] = { { _INFO_CSQ_DISTANCE }, TAG(cjSQ_DISTANCE) }, \
    [INFO_CSQ_STRAND] = { { _INFO_CSQ_STRAND }, TAG(ckSQ_STRAND) }, \
    [INFO_CSQ_FLAGS] = { { _INFO_CSQ_FLAGS }, TAG(clSQ_FLAGS) }, \
    [INFO_CSQ_VARIANT_CLASS] = { { _INFO_CSQ_VARIANT_CLASS }, TAG(cmSQ_VARIANT_CLASS) }, \
    [INFO_CSQ_MINIMISED] = { { _INFO_CSQ_MINIMISED }, TAG(cnSQ_MINIMISED) }, \
    [INFO_CSQ_SYMBOL_SOURCE] = { { _INFO_CSQ_SYMBOL_SOURCE }, TAG(coSQ_SYMBOL_SOURCE) }, \
    [INFO_CSQ_HGNC_ID] = { { _INFO_CSQ_HGNC_ID }, TAG(cpSQ_HGNC_ID) }, \
    [INFO_CSQ_CANONICAL] = { { _INFO_CSQ_CANONICAL }, TAG(cqSQ_CANONICAL) }, \
    [INFO_CSQ_TSL] = { { _INFO_CSQ_TSL }, TAG(crSQ_TSL) }, \
    [INFO_CSQ_APPRIS] = { { _INFO_CSQ_APPRIS }, TAG(csSQ_APPRIS) }, \
    [INFO_CSQ_CCDS] = { { _INFO_CSQ_CCDS }, TAG(ctSQ_CCDS) }, \
    [INFO_CSQ_ENSP] = { { _INFO_CSQ_ENSP }, TAG(cuSQ_ENSP) }, \
    [INFO_CSQ_SWISSPROT] = { { _INFO_CSQ_SWISSPROT }, TAG(cvSQ_SWISSPROT) }, \
    [INFO_CSQ_TREMBL] = { { _INFO_CSQ_TREMBL }, TAG(cwSQ_TREMBL) }, \
    [INFO_CSQ_UNIPARC] = { { _INFO_CSQ_UNIPARC }, TAG(czSQ_UNIPARC) }, \
    [INFO_CSQ_GENE_PHENO] = { { _INFO_CSQ_GENE_PHENO }, TAG(cySQ_GENE_PHENO) }, \
    [INFO_CSQ_SIFT] = { { _INFO_CSQ_SIFT }, TAG(czSQ_SIFT) }, \
    [INFO_CSQ_PolyPhen] = { { _INFO_CSQ_PolyPhen }, TAG(cASQ_PolyPhen) }, \
    [INFO_CSQ_DOMAINS] = { { _INFO_CSQ_DOMAINS }, TAG(cBSQ_DOMAINS) }, \
    [INFO_CSQ_HGVS_OFFSET] = { { _INFO_CSQ_HGVS_OFFSET }, TAG(cCSQ_HGVS_OFFSET) }, \
    [INFO_CSQ_AF] = { { _INFO_CSQ_AF }, TAG(cDSQ_AF) }, \
    [INFO_CSQ_CLIN_SIG] = { { _INFO_CSQ_CLIN_SIG }, TAG(cUSQ_CLIN_SIG) }, \
    [INFO_CSQ_SOMATIC] = { { _INFO_CSQ_SOMATIC }, TAG(cVSQ_SOMATIC) }, \
    [INFO_CSQ_PHENO] = { { _INFO_CSQ_PHENO }, TAG(cQSQ_PHENO) }, \
    [INFO_CSQ_PUBMED] = { { _INFO_CSQ_PUBMED }, TAG(cXSQ_PUBMED) }, \
    [INFO_CSQ_MOTIF_NAME] = { { _INFO_CSQ_MOTIF_NAME }, TAG(cYSQ_MOTIF_NAME) }, \
    [INFO_CSQ_MOTIF_POS] = { { _INFO_CSQ_MOTIF_POS }, TAG(cZSQ_MOTIF_POS) }, \
    [INFO_CSQ_HIGH_INF_POS] = { { _INFO_CSQ_HIGH_INF_POS }, TAG(c@SQ_HIGH_INF_POS) }, \
    [INFO_CSQ_MOTIF_SCORE_CHANGE] = { { _INFO_CSQ_MOTIF_SCORE_CHANGE }, TAG(c$SQ_MOTIF_SCORE_CHANGE) }, \
    [INFO_CSQ_LoF] = { { _INFO_CSQ_LoF }, TAG(c%SQ_LoF) }, \
    [INFO_CSQ_LoF_filter] = { { _INFO_CSQ_LoF_filter }, TAG(c^SQ_LoF_filter) }, \
    [INFO_CSQ_LoF_flags] = { { _INFO_CSQ_LoF_flags }, TAG(c-SQ_LoF_flags) }, \
    [INFO_CSQ_LoF_info] = { { _INFO_CSQ_LoF_info }, TAG(c*SQ_LoF_info) }, \
    [INFO_CSQ_context] = { { _INFO_CSQ_context }, TAG(c_SQ_context) }, \
    [INFO_CSQ_ancestral] = { { _INFO_CSQ_ancestral }, TAG(c+SQ_ancestral) }, \
    [INFO_ALLELEID] = { { _INFO_ALLELEID }, TAG(ALLELEID) }, \
    [INFO_CLNDN] = { { _INFO_CLNDN }, TAG(CLNDN) }, \
    [INFO_CLNHGVS] = { { _INFO_CLNHGVS }, TAG(CLNHGVS) }, \
    [INFO_CLNVI] = { { _INFO_CLNVI }, TAG(CLNVI) }, \
    [INFO_HGVS_snp_pos] = { { _INFO_HGVS_snp_pos }, TAG(H0GVS_snp_pos) }, \
    [INFO_HGVS_snp_refalt] = { { _INFO_HGVS_snp_refalt }, TAG(H1GVS_snp_refalt) }, \
    [INFO_HGVS_del_start_pos] = { { _INFO_HGVS_del_start_pos }, TAG(H2GVS_startpos_del) }, \
    [INFO_HGVS_del_end_pos] = { { _INFO_HGVS_del_end_pos }, TAG(H3GVS_endpos_del) }, \
    [INFO_HGVS_del_payload] = { { _INFO_HGVS_del_payload }, TAG(H4GVS_payload_del) }, \
    [INFO_HGVS_ins_start_pos] = { { _INFO_HGVS_ins_start_pos }, TAG(H5GVS_startpos_ins) }, \
    [INFO_HGVS_ins_end_pos] = { { _INFO_HGVS_ins_end_pos }, TAG(H6GVS_endpos_ins) }, \
    [INFO_HGVS_ins_payload] = { { _INFO_HGVS_ins_payload }, TAG(H7GVS_payload_ins) }, \
    [INFO_HGVS_delins_end_pos] = { { _INFO_HGVS_delins_end_pos }, TAG(H8GVS_endpos_delins) }, \
    [INFO_HGVS_delins_payload] = { { _INFO_HGVS_delins_payload }, TAG(H9GVS_payload_delins) }, \
    [INFO_DP_HIST] = { { _INFO_DP_HIST }, TAG(DP_HIST) }, \
    [INFO_GQ_HIST] = { { _INFO_GQ_HIST }, TAG(GQ_HIST) }, \
    [INFO_SVLEN] = { { _INFO_SVLEN }, TAG(SVLEN) }, \
    [INFO_SVTYPE] = { { _INFO_SVTYPE }, TAG(SVTYPE) }, \
    [FORMAT_RDF] = { { _FORMAT_RDF }, TAG(RDF) }, \
    [FORMAT_RDR] = { { _FORMAT_RDR }, TAG(RDR) }, \
    [FORMAT_SDP] = { { _FORMAT_SDP }, TAG(SDP) }, \
    [FORMAT_RD] = { { _FORMAT_RD }, TAG(RD) }, \
    [FORMAT_FREQ] = { { _FORMAT_FREQ }, TAG(FREQ) }, \
    [FORMAT_PVAL] = { { _FORMAT_PVAL }, TAG(PVAL) }, \
    [FORMAT_RBQ] = { { _FORMAT_RBQ }, TAG(RBQ) }, \
    [FORMAT_ABQ] = { { _FORMAT_ABQ }, TAG(ABQ) }, \
    [INFO_ADP] = { { _INFO_ADP }, TAG(ADP) }, \
    [INFO_WT] = { { _INFO_WT }, TAG(WT) }, \
    [INFO_HET] = { { _INFO_HET }, TAG(HET) }, \
    [INFO_HOM] = { { _INFO_HOM }, TAG(HOM) }, \
    [INFO_NC] = { { _INFO_NC }, TAG(NC) }, \
    [INFO_RS] = { { _INFO_RS }, TAG(RS) }, \
    [INFO_RSPOS] = { { _INFO_RSPOS }, TAG(RSPOS) }, \
    [INFO_TOPMED] = { { _INFO_TOPMED }, TAG(TOPMED) }, \
    [INFO_dbSNPBuildID] = { { _INFO_dbSNPBuildID }, TAG(dbSNPBuildID) }, \
    [INFO_GENEINFO] = { { _INFO_GENEINFO }, TAG(GENEINFO) }, \
    [INFO_PROBE_A] = { { _INFO_PROBE_A }, TAG(PROBE_A) }, \
    [INFO_PROBE_B] = { { _INFO_PROBE_B }, TAG(PROBE_B) }, \
    [INFO_ALLELE_A] = { { _INFO_ALLELE_A }, TAG(ALLELE_A) }, \
    [INFO_ALLELE_B] = { { _INFO_ALLELE_B }, TAG(ALLELE_B) }, \
    [INFO_refSNP] = { { _INFO_refSNP }, TAG(refSNP) }, \
    [INFO_ILLUMINA_CHR] = { { _INFO_ILLUMINA_CHR }, TAG(ILLUMINA_CHR) }, \
    [INFO_ILLUMINA_POS] = { { _INFO_ILLUMINA_POS }, TAG(ILLUMINA_POS) }, \
    [INFO_ILLUMINA_STRAND] = { { _INFO_ILLUMINA_STRAND }, TAG(ILLUMINA_STRAND) }, \
    [FORMAT_BAF] = { { _FORMAT_BAF }, TAG(BAF) }, \
    [FORMAT_X] = { { _FORMAT_X }, TAG(X) }, \
    [FORMAT_Y] = { { _FORMAT_Y }, TAG(Y) }, \
    [INFO_AR2] = { { _INFO_AR2 }, TAG(AR2) }, \
    [INFO_DR2] = { { _INFO_DR2 }, TAG(DR2) }, \
    [INFO_IMP] = { { _INFO_IMP }, TAG(IMP) }, \
    [FORMAT_RC] = { { _FORMAT_RC }, TAG(RC) }, \
    [FORMAT_AC] = { { _FORMAT_AC }, TAG(AC) }, \
    [INFO_RSID] = { { _INFO_RSID }, TAG(RSID) }, \
    [FORMAT_NS] = { { _FORMAT_NS }, TAG(NS) }, \
    [FORMAT_EZ] = { { _FORMAT_EZ }, TAG(EZ) }, \
    [FORMAT_SI] = { { _FORMAT_SI }, TAG(SI) }, \
    [FORMAT_NC] = { { _FORMAT_NC }, TAG(NC) }, \
    [FORMAT_ES] = { { _FORMAT_ES }, TAG(ES) }, \
    [FORMAT_SE] = { { _FORMAT_SE }, TAG(SE) }, \
    [FORMAT_LP] = { { _FORMAT_LP }, TAG(LP) }, \
    [FORMAT_ID] = { { _FORMAT_ID }, TAG(ID) }, \
    [INFO_LUFT] = { { _INFO_LUFT }, TAG(LUFT) }, \
    [INFO_PRIM] = { { _INFO_PRIM }, TAG(PRIM) }, \
    [INFO_LREJ] = { { _INFO_LREJ }, TAG(Lrej) }, \
    [INFO_PREJ] = { { _INFO_PREJ }, TAG(Prej) }, \
} 

typedef enum { SAM_RNAME, SAM_QNAME, SAM_Q0NAME, SAM_Q1NAME, SAM_Q2NAME, SAM_Q3NAME, SAM_Q4NAME, SAM_Q5NAME, SAM_Q6NAME, SAM_Q7NAME, SAM_Q8NAME, SAM_Q9NAME, SAM_QANAME, SAM_QBNAME, SAM_QmNAME, SAM_FLAG, SAM_FLAG0, SAM_FLAG1, SAM_POS, SAM_MAPQ, SAM_CIGAR, SAM_RNEXT, SAM_PNEXT, SAM_P0NEXT, SAM_P1NEXT, SAM_P2NEXT, SAM_P3NEXT, SAM_TLEN, SAM_AUX, SAM_SQBITMAP, SAM_NONREF, SAM_NONREF_X, SAM_GPOS, SAM_STRAND, SAM_SEQMIS_A, SAM_SEQMIS_C, SAM_SEQMIS_G, SAM_SEQMIS_T, SAM_QUAL, SAM_DOMQRUNS, SAM_QUALMPLX, SAM_DIVRQUAL, SAM_QNAMESA, SAM_QUALSA, SAM_QUAL_FLANK, SAM_QUAL_FLANK_DOMQRUNS, SAM_QUAL_FLANK_QUALMPLX, SAM_QUAL_FLANK_DIVRQUAL, SAM_EOL, SAM_BAM_BIN, SAM_TOPLEVEL, SAM_TOP2BAM, SAM_TOP2FQ, SAM_TOP2FQEX, SAM_TAXID, SAM_BUDDY, SAM_SAG, SAM_SAALN, SAM_MC_Z, SAM_DEBUG_LINES, OPTION_AM_i, OPTION_AS_i, OPTION_CC_Z, OPTION_CP_i, OPTION_CM_i, OPTION_FI_i, OPTION_H0_i, OPTION_H1_i, OPTION_H2_i, OPTION_MC_Z, OPTION_MD_Z, OPTION_MQ_i, OPTION_NH_i, OPTION_IH_i, OPTION_HI_i, OPTION_NM_i, OPTION_PQ_i, OPTION_SM_i, OPTION_TC_i, OPTION_UQ_i, OPTION_U2_Z, OPTION_U2_DOMQRUNS, OPTION_U2_QUALMPLX, OPTION_U2_DIVRQUAL, OPTION_E2_Z, OPTION_2NONREF, OPTION_N2ONREFX, OPTION_2GPOS, OPTION_S2TRAND, OPTION_SA_Z, OPTION_SA_RNAME, OPTION_SA_STRAND, OPTION_SA_POS, OPTION_SA_CIGAR, OPTION_SA_NM, OPTION_SA_MAPQ, OPTION_SA_MAIN, OPTION_PG_Z, OPTION_PU_Z, OPTION_RG_Z, OPTION_LB_Z, OPTION_BC_Z, OPTION_BC_ARR, OPTION_QT_Z, OPTION_QT_ARR, OPTION_QT_DOMQRUNS, OPTION_QT_QUALMPLX, OPTION_QT_DIVRQUAL, OPTION_CR_Z, OPTION_CR_Z_X, OPTION_CB_Z, OPTION_CB_ARR, OPTION_CB_SUFFIX, OPTION_CY_Z, OPTION_CY_ARR, OPTION_CY_DOMQRUNS, OPTION_CY_QUALMPLX, OPTION_CY_DIVRQUAL, OPTION_OX_Z, OPTION_MI_Z, OPTION_OQ_Z, OPTION_OQ_DOMQRUNS, OPTION_OQ_QUALMPLX, OPTION_OQ_DIVRQUAL, OPTION_OA_Z, OPTION_OA_RNAME, OPTION_OA_STRAND, OPTION_OA_POS, OPTION_OA_CIGAR, OPTION_OA_NM, OPTION_OA_MAPQ, OPTION_OC_Z, OPTION_OP_i, OPTION_X0_i, OPTION_X1_i, OPTION_XC_i, OPTION_XN_i, OPTION_XM_i, OPTION_XO_i, OPTION_XG_i, OPTION_XT_A, OPTION_XS_i, OPTION_XE_i, OPTION_XA_Z, OPTION_XA_LOOKBACK, OPTION_XA_RNAME, OPTION_XA_STRAND, OPTION_XA_POS, OPTION_XA_CIGAR, OPTION_XA_NM, OPTION_XA_STRAND_POS, OPTION_TS_A, OPTION_YF_Z, OPTION_YS_i, OPTION_YT_Z, OPTION_XA_i, OPTION_ZS_i, OPTION_Zs_Z, OPTION_Zs_POS, OPTION_Zs_TYPE, OPTION_Zs_RS, OPTION_ZA_i, OPTION_ZB_i, OPTION_ZC_B_i, OPTION_ZF_i, OPTION_ZG_i, OPTION_ZM_B_s, OPTION_ZP_B_f, OPTION_ZT_Z, OPTION_ZE_Z, OPTION_YE_Z, OPTION_ZK_Z, OPTION_YK_Z, OPTION_nM_i, OPTION_jM_B_c, OPTION_jI_B_I, OPTION_XS_A, OPTION_uT_A, OPTION_vA_i, OPTION_vG_Z, OPTION_vW_i, OPTION_UR_Z, OPTION_UB_Z, OPTION_UY_Z, OPTION_GN_Z, OPTION_GX_Z, OPTION_gn_Z, OPTION_gx_Z, OPTION_sS_Z, OPTION_sQ_Z, OPTION_sM_Z, OPTION_fx_Z, OPTION_TX_Z, OPTION_TX_LOOKBACK, OPTION_TX_NEGATIVE, OPTION_TX_GENE, OPTION_TX_STRAND, OPTION_TX_POS, OPTION_TX_CIGAR, OPTION_TX_SAM_POS, OPTION_AN_Z, OPTION_AN_LOOKBACK, OPTION_AN_NEGATIVE, OPTION_AN_GENE, OPTION_AN_STRAND, OPTION_AN_POS, OPTION_AN_CIGAR, OPTION_AN_SAM_POS, OPTION_GR_Z, OPTION_GR_Z_X, OPTION_GY_Z, OPTION_GY_Z_X, OPTION_2R_Z, OPTION_2Y_Z, OPTION_2Y_DOMQRUNS, OPTION_2Y_QUALMPLX, OPTION_2Y_DIVRQUAL, OPTION_RX_Z, OPTION_RX_Z_X, OPTION_BX_Z, OPTION_QX_Z, OPTION_QX_DOMQRUNS, OPTION_QX_QUALMPLX, OPTION_QX_DIVRQUAL, OPTION_TR_Z, OPTION_TQ_Z, OPTION_TQ_DOMQRUNS, OPTION_TQ_QUALMPLX, OPTION_TQ_DIVRQUAL, OPTION_PC_i, OPTION_PS_i, OPTION_HP_i, OPTION_MI_i, OPTION_AM_A, OPTION_XM_A, OPTION_DM_Z, OPTION_XL_i, OPTION_XQ_i, OPTION_XT_i, OPTION_cx_i, OPTION_qs_i, OPTION_qe_i, OPTION_ws_i, OPTION_we_i, OPTION_zm_i, OPTION_np_i, OPTION_ec_f, OPTION_rq_f, OPTION_sn_B_f, OPTION_dq_Z, OPTION_dt_Z, OPTION_iq_Z, OPTION_mq_Z, OPTION_sq_Z, OPTION_st_Z, OPTION_ip_B_C, OPTION_pw_B_C, OPTION_fi_B_C, OPTION_ri_B_C, OPTION_fp_B_C, OPTION_rp_B_C, OPTION_fn_i, OPTION_rn_i, OPTION_sz_A, OPTION_sc_A, OPTION_ms_i, OPTION_mc_i, OPTION_cq_Z, OPTION_Z5_i, OPTION_Zq_i, OPTION_YH_Z, OPTION_YQ_Z, OPTION_XR_i, OPTION_QS_i, OPTION_QE_i, OPTION_XI_f, OPTION_CV_f, OPTION_XP_Z, OPTION_XO_Z, OPTION_XM_Z, OPTION_XG_Z, OPTION_XB_Z, OPTION_YS_Z, OPTION_XR_Z, OPTION_XB_A, OPTION_X4_Z, OPTION_X5_Z, OPTION_md_Z, OPTION_BD_Z, OPTION_BI_Z, OPTION_BD_BI, OPTION_XQ_Z, OPTION_tp_A, OPTION_cm_i, OPTION_s1_i, OPTION_s2_i, OPTION_nn_i, OPTION_ts_A, OPTION_cs_Z, OPTION_dv_f, OPTION_de_f, OPTION_rl_i, OPTION_tx_i, OPTION_CIGAR, SAM_E2_Z, SAM_U2_Z, NUM_SAM_FIELDS } SAMFields;

#define SAM_PREDEFINED { \
    [SAM_RNAME] = { { _SAM_RNAME }, TAG(RNAME) }, \
    [SAM_QNAME] = { { _SAM_QNAME }, TAG(QNAME) }, \
    [SAM_Q0NAME] = { { _SAM_Q0NAME }, TAG(Q0NAME) }, \
    [SAM_Q1NAME] = { { _SAM_Q1NAME }, TAG(Q1NAME) }, \
    [SAM_Q2NAME] = { { _SAM_Q2NAME }, TAG(Q2NAME) }, \
    [SAM_Q3NAME] = { { _SAM_Q3NAME }, TAG(Q3NAME) }, \
    [SAM_Q4NAME] = { { _SAM_Q4NAME }, TAG(Q4NAME) }, \
    [SAM_Q5NAME] = { { _SAM_Q5NAME }, TAG(Q5NAME) }, \
    [SAM_Q6NAME] = { { _SAM_Q6NAME }, TAG(Q6NAME) }, \
    [SAM_Q7NAME] = { { _SAM_Q7NAME }, TAG(Q7NAME) }, \
    [SAM_Q8NAME] = { { _SAM_Q8NAME }, TAG(Q8NAME) }, \
    [SAM_Q9NAME] = { { _SAM_Q9NAME }, TAG(Q9NAME) }, \
    [SAM_QANAME] = { { _SAM_QANAME }, TAG(QANAME) }, \
    [SAM_QBNAME] = { { _SAM_QBNAME }, TAG(QBNAME) }, \
    [SAM_QmNAME] = { { _SAM_QmNAME }, TAG(QmNAME) }, \
    [SAM_FLAG] = { { _SAM_FLAG }, TAG(FLAG) }, \
    [SAM_FLAG0] = { { _SAM_FLAG0 }, TAG(F0LAG0) }, \
    [SAM_FLAG1] = { { _SAM_FLAG1 }, TAG(F1LAG1) }, \
    [SAM_POS] = { { _SAM_POS }, TAG(POS) }, \
    [SAM_MAPQ] = { { _SAM_MAPQ }, TAG(MAPQ) }, \
    [SAM_CIGAR] = { { _SAM_CIGAR }, TAG(CIGAR) }, \
    [SAM_RNEXT] = { { _SAM_RNEXT }, TAG(RNEXT) }, \
    [SAM_PNEXT] = { { _SAM_PNEXT }, TAG(PNEXT) }, \
    [SAM_P0NEXT] = { { _SAM_P0NEXT }, TAG(P0NEXT) }, \
    [SAM_P1NEXT] = { { _SAM_P1NEXT }, TAG(P1NEXT) }, \
    [SAM_P2NEXT] = { { _SAM_P2NEXT }, TAG(P2NEXT) }, \
    [SAM_P3NEXT] = { { _SAM_P3NEXT }, TAG(P3NEXT) }, \
    [SAM_TLEN] = { { _SAM_TLEN }, TAG(TLEN) }, \
    [SAM_AUX] = { { _SAM_AUX }, TAG(AUX) }, \
    [SAM_SQBITMAP] = { { _SAM_SQBITMAP }, TAG(SQBITMAP) }, \
    [SAM_NONREF] = { { _SAM_NONREF }, TAG(NONREF) }, \
    [SAM_NONREF_X] = { { _SAM_NONREF_X }, TAG(NONREF_X) }, \
    [SAM_GPOS] = { { _SAM_GPOS }, TAG(GPOS) }, \
    [SAM_STRAND] = { { _SAM_STRAND }, TAG(STRAND) }, \
    [SAM_SEQMIS_A] = { { _SAM_SEQMIS_A }, TAG(SEQMIS_A) }, \
    [SAM_SEQMIS_C] = { { _SAM_SEQMIS_C }, TAG(SEQMIS_C) }, \
    [SAM_SEQMIS_G] = { { _SAM_SEQMIS_G }, TAG(SEQMIS_G) }, \
    [SAM_SEQMIS_T] = { { _SAM_SEQMIS_T }, TAG(SEQMIS_T) }, \
    [SAM_QUAL] = { { _SAM_QUAL }, TAG(QUAL) }, \
    [SAM_DOMQRUNS] = { { _SAM_DOMQRUNS }, TAG(DOMQRUNS) }, \
    [SAM_QUALMPLX] = { { _SAM_QUALMPLX }, TAG(QUALMPLX) }, \
    [SAM_DIVRQUAL] = { { _SAM_DIVRQUAL }, TAG(DIVRQUAL) }, \
    [SAM_QNAMESA] = { { _SAM_QNAMESA }, TAG(QNAMESA) }, \
    [SAM_QUALSA] = { { _SAM_QUALSA }, TAG(QUALSA) }, \
    [SAM_QUAL_FLANK] = { { _SAM_QUAL_FLANK }, TAG(QUALFLNK) }, \
    [SAM_QUAL_FLANK_DOMQRUNS] = { { _SAM_QUAL_FLANK_DOMQRUNS }, TAG(Q0F_DOMQ) }, \
    [SAM_QUAL_FLANK_QUALMPLX] = { { _SAM_QUAL_FLANK_QUALMPLX }, TAG(Q1F_MPLX) }, \
    [SAM_QUAL_FLANK_DIVRQUAL] = { { _SAM_QUAL_FLANK_DIVRQUAL }, TAG(Q2F_DIVR) }, \
    [SAM_EOL] = { { _SAM_EOL }, TAG(EOL) }, \
    [SAM_BAM_BIN] = { { _SAM_BAM_BIN }, TAG(BAM_BIN) }, \
    [SAM_TOPLEVEL] = { { _SAM_TOPLEVEL }, TAG(TOPLEVEL) }, \
    [SAM_TOP2BAM] = { { _SAM_TOP2BAM }, TAG(TOP2BAM) }, \
    [SAM_TOP2FQ] = { { _SAM_TOP2FQ }, TAG(TOP2FQ) }, \
    [SAM_TOP2FQEX] = { { _SAM_TOP2FQEX }, TAG(TOP2FQEX) }, \
    [SAM_TAXID] = { { _SAM_TAXID }, TAG(TAXID) }, \
    [SAM_BUDDY] = { { _SAM_BUDDY }, TAG(BUDDY) }, \
    [SAM_SAG] = { { _SAM_SAG }, TAG(SAG) }, \
    [SAM_SAALN] = { { _SAM_SAALN }, TAG(SAALN) }, \
    [SAM_MC_Z] = { { _SAM_MC_Z }, TAG(MC_Z) }, \
    [SAM_DEBUG_LINES] = { { _SAM_DEBUG_LINES }, TAG(DBGLINES) }, \
    [OPTION_AM_i] = { { _OPTION_AM_i }, TAG(AM:i) }, \
    [OPTION_AS_i] = { { _OPTION_AS_i }, TAG(AS:i) }, \
    [OPTION_CC_Z] = { { _OPTION_CC_Z }, TAG(CC:Z) }, \
    [OPTION_CP_i] = { { _OPTION_CP_i }, TAG(CP:i) }, \
    [OPTION_CM_i] = { { _OPTION_CM_i }, TAG(CM:i) }, \
    [OPTION_FI_i] = { { _OPTION_FI_i }, TAG(FI:i) }, \
    [OPTION_H0_i] = { { _OPTION_H0_i }, TAG(H0:i) }, \
    [OPTION_H1_i] = { { _OPTION_H1_i }, TAG(H1:i) }, \
    [OPTION_H2_i] = { { _OPTION_H2_i }, TAG(H2:i) }, \
    [OPTION_MC_Z] = { { _OPTION_MC_Z }, TAG(MC:Z) }, \
    [OPTION_MD_Z] = { { _OPTION_MD_Z }, TAG(MD:Z) }, \
    [OPTION_MQ_i] = { { _OPTION_MQ_i }, TAG(MQ:i) }, \
    [OPTION_NH_i] = { { _OPTION_NH_i }, TAG(NH:i) }, \
    [OPTION_IH_i] = { { _OPTION_IH_i }, TAG(IH:i) }, \
    [OPTION_HI_i] = { { _OPTION_HI_i }, TAG(HI:i) }, \
    [OPTION_NM_i] = { { _OPTION_NM_i }, TAG(NM:i) }, \
    [OPTION_PQ_i] = { { _OPTION_PQ_i }, TAG(PQ:i) }, \
    [OPTION_SM_i] = { { _OPTION_SM_i }, TAG(SM:i) }, \
    [OPTION_TC_i] = { { _OPTION_TC_i }, TAG(TC:i) }, \
    [OPTION_UQ_i] = { { _OPTION_UQ_i }, TAG(UQ:i) }, \
    [OPTION_U2_Z] = { { _OPTION_U2_Z }, TAG(U2:Z) }, \
    [OPTION_U2_DOMQRUNS] = { { _OPTION_U2_DOMQRUNS }, TAG(DOMQRUNS) }, \
    [OPTION_U2_QUALMPLX] = { { _OPTION_U2_QUALMPLX }, TAG(QUALMPLX) }, \
    [OPTION_U2_DIVRQUAL] = { { _OPTION_U2_DIVRQUAL }, TAG(DIVRQUAL) }, \
    [OPTION_E2_Z] = { { _OPTION_E2_Z }, TAG(E2:Z) }, \
    [OPTION_2NONREF] = { { _OPTION_2NONREF }, TAG(N2ONREF) }, \
    [OPTION_N2ONREFX] = { { _OPTION_N2ONREFX }, TAG(n2ONREFX) }, \
    [OPTION_2GPOS] = { { _OPTION_2GPOS }, TAG(G2POS) }, \
    [OPTION_S2TRAND] = { { _OPTION_S2TRAND }, TAG(S2TRAND) }, \
    [OPTION_SA_Z] = { { _OPTION_SA_Z }, TAG(SA:Z) }, \
    [OPTION_SA_RNAME] = { { _OPTION_SA_RNAME }, TAG(S0A_RNAME) }, \
    [OPTION_SA_STRAND] = { { _OPTION_SA_STRAND }, TAG(S1A_STRAND) }, \
    [OPTION_SA_POS] = { { _OPTION_SA_POS }, TAG(S2A_POS) }, \
    [OPTION_SA_CIGAR] = { { _OPTION_SA_CIGAR }, TAG(S3A_CIGAR) }, \
    [OPTION_SA_NM] = { { _OPTION_SA_NM }, TAG(S4A_NM) }, \
    [OPTION_SA_MAPQ] = { { _OPTION_SA_MAPQ }, TAG(S5A_MAPQ) }, \
    [OPTION_SA_MAIN] = { { _OPTION_SA_MAIN }, TAG(S6A_MAIN) }, \
    [OPTION_PG_Z] = { { _OPTION_PG_Z }, TAG(PG:Z) }, \
    [OPTION_PU_Z] = { { _OPTION_PU_Z }, TAG(PU:Z) }, \
    [OPTION_RG_Z] = { { _OPTION_RG_Z }, TAG(RG:Z) }, \
    [OPTION_LB_Z] = { { _OPTION_LB_Z }, TAG(LB:Z) }, \
    [OPTION_BC_Z] = { { _OPTION_BC_Z }, TAG(BC:Z) }, \
    [OPTION_BC_ARR] = { { _OPTION_BC_ARR }, TAG(BC_ARR) }, \
    [OPTION_QT_Z] = { { _OPTION_QT_Z }, TAG(QT:Z) }, \
    [OPTION_QT_ARR] = { { _OPTION_QT_ARR }, TAG(QT_ARR) }, \
    [OPTION_QT_DOMQRUNS] = { { _OPTION_QT_DOMQRUNS }, TAG(Q0T_DOMQ) }, \
    [OPTION_QT_QUALMPLX] = { { _OPTION_QT_QUALMPLX }, TAG(Q1T_MPLX) }, \
    [OPTION_QT_DIVRQUAL] = { { _OPTION_QT_DIVRQUAL }, TAG(Q2T_DEVQ) }, \
    [OPTION_CR_Z] = { { _OPTION_CR_Z }, TAG(CR:Z) }, \
    [OPTION_CR_Z_X] = { { _OPTION_CR_Z_X }, TAG(C0R_X) }, \
    [OPTION_CB_Z] = { { _OPTION_CB_Z }, TAG(CB:Z) }, \
    [OPTION_CB_ARR] = { { _OPTION_CB_ARR }, TAG(C0B_ARR) }, \
    [OPTION_CB_SUFFIX] = { { _OPTION_CB_SUFFIX }, TAG(C1B_SUFF) }, \
    [OPTION_CY_Z] = { { _OPTION_CY_Z }, TAG(CY:Z) }, \
    [OPTION_CY_ARR] = { { _OPTION_CY_ARR }, TAG(CY_ARR) }, \
    [OPTION_CY_DOMQRUNS] = { { _OPTION_CY_DOMQRUNS }, TAG(C0Y_DOMQ) }, \
    [OPTION_CY_QUALMPLX] = { { _OPTION_CY_QUALMPLX }, TAG(C1Y_MPLX) }, \
    [OPTION_CY_DIVRQUAL] = { { _OPTION_CY_DIVRQUAL }, TAG(C2Y_DEVQ) }, \
    [OPTION_OX_Z] = { { _OPTION_OX_Z }, TAG(OX:Z) }, \
    [OPTION_MI_Z] = { { _OPTION_MI_Z }, TAG(MI:Z) }, \
    [OPTION_OQ_Z] = { { _OPTION_OQ_Z }, TAG(OQ:Z) }, \
    [OPTION_OQ_DOMQRUNS] = { { _OPTION_OQ_DOMQRUNS }, TAG(O0Q_DOMQ) }, \
    [OPTION_OQ_QUALMPLX] = { { _OPTION_OQ_QUALMPLX }, TAG(O1Q_MPLX) }, \
    [OPTION_OQ_DIVRQUAL] = { { _OPTION_OQ_DIVRQUAL }, TAG(O2Q_DEVQ) }, \
    [OPTION_OA_Z] = { { _OPTION_OA_Z }, TAG(OA:Z) }, \
    [OPTION_OA_RNAME] = { { _OPTION_OA_RNAME }, TAG(O0A_RNAME) }, \
    [OPTION_OA_STRAND] = { { _OPTION_OA_STRAND }, TAG(O1A_STRAND) }, \
    [OPTION_OA_POS] = { { _OPTION_OA_POS }, TAG(O2A_POS) }, \
    [OPTION_OA_CIGAR] = { { _OPTION_OA_CIGAR }, TAG(O3A_CIGAR) }, \
    [OPTION_OA_NM] = { { _OPTION_OA_NM }, TAG(O4A_NM) }, \
    [OPTION_OA_MAPQ] = { { _OPTION_OA_MAPQ }, TAG(O5A_MAPQ) }, \
    [OPTION_OC_Z] = { { _OPTION_OC_Z }, TAG(OC:Z) }, \
    [OPTION_OP_i] = { { _OPTION_OP_i }, TAG(OP:i) }, \
    [OPTION_X0_i] = { { _OPTION_X0_i }, TAG(X0:i) }, \
    [OPTION_X1_i] = { { _OPTION_X1_i }, TAG(X1:i) }, \
    [OPTION_XC_i] = { { _OPTION_XC_i }, TAG(XC:i) }, \
    [OPTION_XN_i] = { { _OPTION_XN_i }, TAG(XN:i) }, \
    [OPTION_XM_i] = { { _OPTION_XM_i }, TAG(XM:i) }, \
    [OPTION_XO_i] = { { _OPTION_XO_i }, TAG(XO:i) }, \
    [OPTION_XG_i] = { { _OPTION_XG_i }, TAG(XG:i) }, \
    [OPTION_XT_A] = { { _OPTION_XT_A }, TAG(XT:A) }, \
    [OPTION_XS_i] = { { _OPTION_XS_i }, TAG(XS:i) }, \
    [OPTION_XE_i] = { { _OPTION_XE_i }, TAG(XE:i) }, \
    [OPTION_XA_Z] = { { _OPTION_XA_Z }, TAG(XA:Z) }, \
    [OPTION_XA_LOOKBACK] = { { _OPTION_XA_LOOKBACK }, TAG(X^A_LOOKBACK) }, \
    [OPTION_XA_RNAME] = { { _OPTION_XA_RNAME }, TAG(X0A_RNAME) }, \
    [OPTION_XA_STRAND] = { { _OPTION_XA_STRAND }, TAG(X1A_STRAND) }, \
    [OPTION_XA_POS] = { { _OPTION_XA_POS }, TAG(X2A_POS) }, \
    [OPTION_XA_CIGAR] = { { _OPTION_XA_CIGAR }, TAG(X3A_CIGAR) }, \
    [OPTION_XA_NM] = { { _OPTION_XA_NM }, TAG(X4A_NM) }, \
    [OPTION_XA_STRAND_POS] = { { _OPTION_XA_STRAND_POS }, TAG(X5A_STRAND_POS) }, \
    [OPTION_TS_A] = { { _OPTION_TS_A }, TAG(TS:A) }, \
    [OPTION_YF_Z] = { { _OPTION_YF_Z }, TAG(YF:Z) }, \
    [OPTION_YS_i] = { { _OPTION_YS_i }, TAG(YS:i) }, \
    [OPTION_YT_Z] = { { _OPTION_YT_Z }, TAG(YT:Z) }, \
    [OPTION_XA_i] = { { _OPTION_XA_i }, TAG(XA:i) }, \
    [OPTION_ZS_i] = { { _OPTION_ZS_i }, TAG(ZS:i) }, \
    [OPTION_Zs_Z] = { { _OPTION_Zs_Z }, TAG(Zs:Z) }, \
    [OPTION_Zs_POS] = { { _OPTION_Zs_POS }, TAG(Z0s_POS) }, \
    [OPTION_Zs_TYPE] = { { _OPTION_Zs_TYPE }, TAG(Z1s_TYPE) }, \
    [OPTION_Zs_RS] = { { _OPTION_Zs_RS }, TAG(Z2s_RS) }, \
    [OPTION_ZA_i] = { { _OPTION_ZA_i }, TAG(ZA:i) }, \
    [OPTION_ZB_i] = { { _OPTION_ZB_i }, TAG(ZB:i) }, \
    [OPTION_ZC_B_i] = { { _OPTION_ZC_B_i }, TAG(ZC:B:i) }, \
    [OPTION_ZF_i] = { { _OPTION_ZF_i }, TAG(ZF:i) }, \
    [OPTION_ZG_i] = { { _OPTION_ZG_i }, TAG(ZG:i) }, \
    [OPTION_ZM_B_s] = { { _OPTION_ZM_B_s }, TAG(ZM:B:s) }, \
    [OPTION_ZP_B_f] = { { _OPTION_ZP_B_f }, TAG(ZP:B:f) }, \
    [OPTION_ZT_Z] = { { _OPTION_ZT_Z }, TAG(ZT:Z) }, \
    [OPTION_ZE_Z] = { { _OPTION_ZE_Z }, TAG(ZE:Z) }, \
    [OPTION_YE_Z] = { { _OPTION_YE_Z }, TAG(YE:Z) }, \
    [OPTION_ZK_Z] = { { _OPTION_ZK_Z }, TAG(ZK:Z) }, \
    [OPTION_YK_Z] = { { _OPTION_YK_Z }, TAG(YK:Z) }, \
    [OPTION_nM_i] = { { _OPTION_nM_i }, TAG(nM:i) }, \
    [OPTION_jM_B_c] = { { _OPTION_jM_B_c }, TAG(jM:B:c) }, \
    [OPTION_jI_B_I] = { { _OPTION_jI_B_I }, TAG(jI:B:I) }, \
    [OPTION_XS_A] = { { _OPTION_XS_A }, TAG(XS:A) }, \
    [OPTION_uT_A] = { { _OPTION_uT_A }, TAG(uT:A) }, \
    [OPTION_vA_i] = { { _OPTION_vA_i }, TAG(vA:i) }, \
    [OPTION_vG_Z] = { { _OPTION_vG_Z }, TAG(vG:Z) }, \
    [OPTION_vW_i] = { { _OPTION_vW_i }, TAG(vW:i) }, \
    [OPTION_UR_Z] = { { _OPTION_UR_Z }, TAG(UR:Z) }, \
    [OPTION_UB_Z] = { { _OPTION_UB_Z }, TAG(UB:Z) }, \
    [OPTION_UY_Z] = { { _OPTION_UY_Z }, TAG(UY:Z) }, \
    [OPTION_GN_Z] = { { _OPTION_GN_Z }, TAG(GN:Z) }, \
    [OPTION_GX_Z] = { { _OPTION_GX_Z }, TAG(GX:Z) }, \
    [OPTION_gn_Z] = { { _OPTION_gn_Z }, TAG(gn:Z) }, \
    [OPTION_gx_Z] = { { _OPTION_gx_Z }, TAG(gx:Z) }, \
    [OPTION_sS_Z] = { { _OPTION_sS_Z }, TAG(sS:Z) }, \
    [OPTION_sQ_Z] = { { _OPTION_sQ_Z }, TAG(sQ:Z) }, \
    [OPTION_sM_Z] = { { _OPTION_sM_Z }, TAG(sM:Z) }, \
    [OPTION_fx_Z] = { { _OPTION_fx_Z }, TAG(fx:Z) }, \
    [OPTION_TX_Z] = { { _OPTION_TX_Z }, TAG(TX:Z) }, \
    [OPTION_TX_LOOKBACK] = { { _OPTION_TX_LOOKBACK }, TAG(T^X_LOOKBACK) }, \
    [OPTION_TX_NEGATIVE] = { { _OPTION_TX_NEGATIVE }, TAG(T1X_NEG) }, \
    [OPTION_TX_GENE] = { { _OPTION_TX_GENE }, TAG(T2X_GENE) }, \
    [OPTION_TX_STRAND] = { { _OPTION_TX_STRAND }, TAG(T3X_STRAND) }, \
    [OPTION_TX_POS] = { { _OPTION_TX_POS }, TAG(T4X_POS) }, \
    [OPTION_TX_CIGAR] = { { _OPTION_TX_CIGAR }, TAG(T5X_CIGAR) }, \
    [OPTION_TX_SAM_POS] = { { _OPTION_TX_SAM_POS }, TAG(T6X_SPOS) }, \
    [OPTION_AN_Z] = { { _OPTION_AN_Z }, TAG(AN:Z) }, \
    [OPTION_AN_LOOKBACK] = { { _OPTION_AN_LOOKBACK }, TAG(A^N_LOOKBACK) }, \
    [OPTION_AN_NEGATIVE] = { { _OPTION_AN_NEGATIVE }, TAG(A1N_NEG) }, \
    [OPTION_AN_GENE] = { { _OPTION_AN_GENE }, TAG(A2N_GENE) }, \
    [OPTION_AN_STRAND] = { { _OPTION_AN_STRAND }, TAG(A3N_STRAND) }, \
    [OPTION_AN_POS] = { { _OPTION_AN_POS }, TAG(A4N_POS) }, \
    [OPTION_AN_CIGAR] = { { _OPTION_AN_CIGAR }, TAG(A5N_CIGAR) }, \
    [OPTION_AN_SAM_POS] = { { _OPTION_AN_SAM_POS }, TAG(A6N_SPOS) }, \
    [OPTION_GR_Z] = { { _OPTION_GR_Z }, TAG(GR:Z) }, \
    [OPTION_GR_Z_X] = { { _OPTION_GR_Z_X }, TAG(G0R_X) }, \
    [OPTION_GY_Z] = { { _OPTION_GY_Z }, TAG(GY:Z) }, \
    [OPTION_GY_Z_X] = { { _OPTION_GY_Z_X }, TAG(G0Y_X) }, \
    [OPTION_2R_Z] = { { _OPTION_2R_Z }, TAG(2R:Z) }, \
    [OPTION_2Y_Z] = { { _OPTION_2Y_Z }, TAG(2Y:Z) }, \
    [OPTION_2Y_DOMQRUNS] = { { _OPTION_2Y_DOMQRUNS }, TAG(20Y_DOMQ) }, \
    [OPTION_2Y_QUALMPLX] = { { _OPTION_2Y_QUALMPLX }, TAG(21Y_MPLX) }, \
    [OPTION_2Y_DIVRQUAL] = { { _OPTION_2Y_DIVRQUAL }, TAG(22Y_DEVQ) }, \
    [OPTION_RX_Z] = { { _OPTION_RX_Z }, TAG(RX:Z) }, \
    [OPTION_RX_Z_X] = { { _OPTION_RX_Z_X }, TAG(R0X_X) }, \
    [OPTION_BX_Z] = { { _OPTION_BX_Z }, TAG(BX:Z) }, \
    [OPTION_QX_Z] = { { _OPTION_QX_Z }, TAG(QX:Z) }, \
    [OPTION_QX_DOMQRUNS] = { { _OPTION_QX_DOMQRUNS }, TAG(Q0X_DOMQ) }, \
    [OPTION_QX_QUALMPLX] = { { _OPTION_QX_QUALMPLX }, TAG(Q1X_MPLX) }, \
    [OPTION_QX_DIVRQUAL] = { { _OPTION_QX_DIVRQUAL }, TAG(Q2X_DEVQ) }, \
    [OPTION_TR_Z] = { { _OPTION_TR_Z }, TAG(TR:Z) }, \
    [OPTION_TQ_Z] = { { _OPTION_TQ_Z }, TAG(TQ:Z) }, \
    [OPTION_TQ_DOMQRUNS] = { { _OPTION_TQ_DOMQRUNS }, TAG(T0Q_DOMQ) }, \
    [OPTION_TQ_QUALMPLX] = { { _OPTION_TQ_QUALMPLX }, TAG(T1Q_MPLX) }, \
    [OPTION_TQ_DIVRQUAL] = { { _OPTION_TQ_DIVRQUAL }, TAG(T2Q_DEVQ) }, \
    [OPTION_PC_i] = { { _OPTION_PC_i }, TAG(PC:i) }, \
    [OPTION_PS_i] = { { _OPTION_PS_i }, TAG(PS:i) }, \
    [OPTION_HP_i] = { { _OPTION_HP_i }, TAG(HP:i) }, \
    [OPTION_MI_i] = { { _OPTION_MI_i }, TAG(MI:i) }, \
    [OPTION_AM_A] = { { _OPTION_AM_A }, TAG(AM:A) }, \
    [OPTION_XM_A] = { { _OPTION_XM_A }, TAG(XM:A) }, \
    [OPTION_DM_Z] = { { _OPTION_DM_Z }, TAG(DM:Z) }, \
    [OPTION_XL_i] = { { _OPTION_XL_i }, TAG(XL:i) }, \
    [OPTION_XQ_i] = { { _OPTION_XQ_i }, TAG(XQ:i) }, \
    [OPTION_XT_i] = { { _OPTION_XT_i }, TAG(XT:i) }, \
    [OPTION_cx_i] = { { _OPTION_cx_i }, TAG(cx:i) }, \
    [OPTION_qs_i] = { { _OPTION_qs_i }, TAG(qs:i) }, \
    [OPTION_qe_i] = { { _OPTION_qe_i }, TAG(qe:i) }, \
    [OPTION_ws_i] = { { _OPTION_ws_i }, TAG(ws:i) }, \
    [OPTION_we_i] = { { _OPTION_we_i }, TAG(we:i) }, \
    [OPTION_zm_i] = { { _OPTION_zm_i }, TAG(zm:i) }, \
    [OPTION_np_i] = { { _OPTION_np_i }, TAG(np:i) }, \
    [OPTION_ec_f] = { { _OPTION_ec_f }, TAG(ec:f) }, \
    [OPTION_rq_f] = { { _OPTION_rq_f }, TAG(rq:f) }, \
    [OPTION_sn_B_f] = { { _OPTION_sn_B_f }, TAG(sn:B:f) }, \
    [OPTION_dq_Z] = { { _OPTION_dq_Z }, TAG(dq:Z) }, \
    [OPTION_dt_Z] = { { _OPTION_dt_Z }, TAG(dt:Z) }, \
    [OPTION_iq_Z] = { { _OPTION_iq_Z }, TAG(iq:Z) }, \
    [OPTION_mq_Z] = { { _OPTION_mq_Z }, TAG(mq:Z) }, \
    [OPTION_sq_Z] = { { _OPTION_sq_Z }, TAG(sq:Z) }, \
    [OPTION_st_Z] = { { _OPTION_st_Z }, TAG(st:Z) }, \
    [OPTION_ip_B_C] = { { _OPTION_ip_B_C }, TAG(ip:B:C) }, \
    [OPTION_pw_B_C] = { { _OPTION_pw_B_C }, TAG(pw:B:C) }, \
    [OPTION_fi_B_C] = { { _OPTION_fi_B_C }, TAG(fi:B:C) }, \
    [OPTION_ri_B_C] = { { _OPTION_ri_B_C }, TAG(ri:B:C) }, \
    [OPTION_fp_B_C] = { { _OPTION_fp_B_C }, TAG(fp:B:C) }, \
    [OPTION_rp_B_C] = { { _OPTION_rp_B_C }, TAG(rp:B:C) }, \
    [OPTION_fn_i] = { { _OPTION_fn_i }, TAG(fn:i) }, \
    [OPTION_rn_i] = { { _OPTION_rn_i }, TAG(rn:i) }, \
    [OPTION_sz_A] = { { _OPTION_sz_A }, TAG(sz_A) }, \
    [OPTION_sc_A] = { { _OPTION_sc_A }, TAG(sc_A) }, \
    [OPTION_ms_i] = { { _OPTION_ms_i }, TAG(ms:i) }, \
    [OPTION_mc_i] = { { _OPTION_mc_i }, TAG(mc:i) }, \
    [OPTION_cq_Z] = { { _OPTION_cq_Z }, TAG(cq:Z) }, \
    [OPTION_Z5_i] = { { _OPTION_Z5_i }, TAG(Z5:i) }, \
    [OPTION_Zq_i] = { { _OPTION_Zq_i }, TAG(Zq:i) }, \
    [OPTION_YH_Z] = { { _OPTION_YH_Z }, TAG(YH:Z) }, \
    [OPTION_YQ_Z] = { { _OPTION_YQ_Z }, TAG(YQ:Z) }, \
    [OPTION_XR_i] = { { _OPTION_XR_i }, TAG(XR:i) }, \
    [OPTION_QS_i] = { { _OPTION_QS_i }, TAG(QS:i) }, \
    [OPTION_QE_i] = { { _OPTION_QE_i }, TAG(QE:i) }, \
    [OPTION_XI_f] = { { _OPTION_XI_f }, TAG(XI:f) }, \
    [OPTION_CV_f] = { { _OPTION_CV_f }, TAG(CV:f) }, \
    [OPTION_XP_Z] = { { _OPTION_XP_Z }, TAG(XP:Z) }, \
    [OPTION_XO_Z] = { { _OPTION_XO_Z }, TAG(XO:Z) }, \
    [OPTION_XM_Z] = { { _OPTION_XM_Z }, TAG(XM:Z) }, \
    [OPTION_XG_Z] = { { _OPTION_XG_Z }, TAG(XG:Z) }, \
    [OPTION_XB_Z] = { { _OPTION_XB_Z }, TAG(XB:Z) }, \
    [OPTION_YS_Z] = { { _OPTION_YS_Z }, TAG(YS:Z) }, \
    [OPTION_XR_Z] = { { _OPTION_XR_Z }, TAG(XR:Z) }, \
    [OPTION_XB_A] = { { _OPTION_XB_A }, TAG(XB:A) }, \
    [OPTION_X4_Z] = { { _OPTION_X4_Z }, TAG(X4:Z) }, \
    [OPTION_X5_Z] = { { _OPTION_X5_Z }, TAG(X5:Z) }, \
    [OPTION_md_Z] = { { _OPTION_md_Z }, TAG(md:Z) }, \
    [OPTION_BD_Z] = { { _OPTION_BD_Z }, TAG(BD:Z) }, \
    [OPTION_BI_Z] = { { _OPTION_BI_Z }, TAG(BI:Z) }, \
    [OPTION_BD_BI] = { { _OPTION_BD_BI }, TAG(BD_BI) }, \
    [OPTION_XQ_Z] = { { _OPTION_XQ_Z }, TAG(XQ:Z) }, \
    [OPTION_tp_A] = { { _OPTION_tp_A }, TAG(tp:A) }, \
    [OPTION_cm_i] = { { _OPTION_cm_i }, TAG(cm:i) }, \
    [OPTION_s1_i] = { { _OPTION_s1_i }, TAG(s1:i) }, \
    [OPTION_s2_i] = { { _OPTION_s2_i }, TAG(s2:i) }, \
    [OPTION_nn_i] = { { _OPTION_nn_i }, TAG(nn:i) }, \
    [OPTION_ts_A] = { { _OPTION_ts_A }, TAG(ts:A) }, \
    [OPTION_cs_Z] = { { _OPTION_cs_Z }, TAG(cs:Z) }, \
    [OPTION_dv_f] = { { _OPTION_dv_f }, TAG(dv:f) }, \
    [OPTION_de_f] = { { _OPTION_de_f }, TAG(de:f) }, \
    [OPTION_rl_i] = { { _OPTION_rl_i }, TAG(rl:i) }, \
    [OPTION_tx_i] = { { _OPTION_tx_i }, TAG(tx:i) }, \
    [OPTION_CIGAR] = { { _OPTION_CIGAR }, TAG(@CIGAR) }, \
    [SAM_E2_Z] = { { _SAM_E2_Z }, TAG(E2:Z) }, \
    [SAM_U2_Z] = { { _SAM_U2_Z }, TAG(U2:Z) }, \
} 

typedef enum { FASTQ_CONTIG, FASTQ_DESC, FASTQ_Q0NAME, FASTQ_Q1NAME, FASTQ_Q2NAME, FASTQ_Q3NAME, FASTQ_Q4NAME, FASTQ_Q5NAME, FASTQ_Q6NAME, FASTQ_Q7NAME, FASTQ_Q8NAME, FASTQ_Q9NAME, FASTQ_QANAME, FASTQ_QBNAME, FASTQ_QmNAME, FASTQ_QNAME2, FASTQ_Q0NAME2, FASTQ_Q1NAME2, FASTQ_Q2NAME2, FASTQ_Q3NAME2, FASTQ_Q4NAME2, FASTQ_Q5NAME2, FASTQ_Q6NAME2, FASTQ_Q7NAME2, FASTQ_Q8NAME2, FASTQ_Q9NAME2, FASTQ_QANAME2, FASTQ_QBNAME2, FASTQ_E1L, FASTQ_SQBITMAP, FASTQ_NONREF, FASTQ_NONREF_X, FASTQ_GPOS, FASTQ_STRAND, FASTQ_SEQMIS_A, FASTQ_SEQMIS_C, FASTQ_SEQMIS_G, FASTQ_SEQMIS_T, FASTQ_E2L, FASTQ_QUAL, FASTQ_DOMQRUNS, FASTQ_QUALMPLX, FASTQ_DIVRQUAL, FASTQ_TOPLEVEL, FASTQ_TAXID, FASTQ_DEBUG_LINES, FASTQ_LINE3, FASTQ_T0HIRD, FASTQ_T1HIRD, FASTQ_T2HIRD, FASTQ_T3HIRD, FASTQ_T4HIRD, FASTQ_T5HIRD, FASTQ_T6HIRD, FASTQ_T7HIRD, FASTQ_COPY_Q, NUM_FASTQ_FIELDS } FASTQFields;

#define FASTQ_PREDEFINED { \
    [FASTQ_CONTIG] = { { _FASTQ_CONTIG }, TAG(CONTIG) }, \
    [FASTQ_DESC] = { { _FASTQ_DESC }, TAG(DESC) }, \
    [FASTQ_Q0NAME] = { { _FASTQ_Q0NAME }, TAG(Q0NAME) }, \
    [FASTQ_Q1NAME] = { { _FASTQ_Q1NAME }, TAG(Q1NAME) }, \
    [FASTQ_Q2NAME] = { { _FASTQ_Q2NAME }, TAG(Q2NAME) }, \
    [FASTQ_Q3NAME] = { { _FASTQ_Q3NAME }, TAG(Q3NAME) }, \
    [FASTQ_Q4NAME] = { { _FASTQ_Q4NAME }, TAG(Q4NAME) }, \
    [FASTQ_Q5NAME] = { { _FASTQ_Q5NAME }, TAG(Q5NAME) }, \
    [FASTQ_Q6NAME] = { { _FASTQ_Q6NAME }, TAG(Q6NAME) }, \
    [FASTQ_Q7NAME] = { { _FASTQ_Q7NAME }, TAG(Q7NAME) }, \
    [FASTQ_Q8NAME] = { { _FASTQ_Q8NAME }, TAG(Q8NAME) }, \
    [FASTQ_Q9NAME] = { { _FASTQ_Q9NAME }, TAG(Q9NAME) }, \
    [FASTQ_QANAME] = { { _FASTQ_QANAME }, TAG(QANAME) }, \
    [FASTQ_QBNAME] = { { _FASTQ_QBNAME }, TAG(QBNAME) }, \
    [FASTQ_QmNAME] = { { _FASTQ_QmNAME }, TAG(QmNAME) }, \
    [FASTQ_QNAME2] = { { _FASTQ_QNAME2 }, TAG(QNAME2) }, \
    [FASTQ_Q0NAME2] = { { _FASTQ_Q0NAME2 }, TAG(q0NAME) }, \
    [FASTQ_Q1NAME2] = { { _FASTQ_Q1NAME2 }, TAG(q1NAME) }, \
    [FASTQ_Q2NAME2] = { { _FASTQ_Q2NAME2 }, TAG(q2NAME) }, \
    [FASTQ_Q3NAME2] = { { _FASTQ_Q3NAME2 }, TAG(q3NAME) }, \
    [FASTQ_Q4NAME2] = { { _FASTQ_Q4NAME2 }, TAG(q4NAME) }, \
    [FASTQ_Q5NAME2] = { { _FASTQ_Q5NAME2 }, TAG(q5NAME) }, \
    [FASTQ_Q6NAME2] = { { _FASTQ_Q6NAME2 }, TAG(q6NAME) }, \
    [FASTQ_Q7NAME2] = { { _FASTQ_Q7NAME2 }, TAG(q7NAME) }, \
    [FASTQ_Q8NAME2] = { { _FASTQ_Q8NAME2 }, TAG(q8NAME) }, \
    [FASTQ_Q9NAME2] = { { _FASTQ_Q9NAME2 }, TAG(q9NAME) }, \
    [FASTQ_QANAME2] = { { _FASTQ_QANAME2 }, TAG(qANAME) }, \
    [FASTQ_QBNAME2] = { { _FASTQ_QBNAME2 }, TAG(qBNAME) }, \
    [FASTQ_E1L] = { { _FASTQ_E1L }, TAG(E1L) }, \
    [FASTQ_SQBITMAP] = { { _FASTQ_SQBITMAP }, TAG(SQBITMAP) }, \
    [FASTQ_NONREF] = { { _FASTQ_NONREF }, TAG(NONREF) }, \
    [FASTQ_NONREF_X] = { { _FASTQ_NONREF_X }, TAG(NONREF_X) }, \
    [FASTQ_GPOS] = { { _FASTQ_GPOS }, TAG(GPOS) }, \
    [FASTQ_STRAND] = { { _FASTQ_STRAND }, TAG(STRAND) }, \
    [FASTQ_SEQMIS_A] = { { _FASTQ_SEQMIS_A }, TAG(SEQMIS_A) }, \
    [FASTQ_SEQMIS_C] = { { _FASTQ_SEQMIS_C }, TAG(SEQMIS_C) }, \
    [FASTQ_SEQMIS_G] = { { _FASTQ_SEQMIS_G }, TAG(SEQMIS_G) }, \
    [FASTQ_SEQMIS_T] = { { _FASTQ_SEQMIS_T }, TAG(SEQMIS_T) }, \
    [FASTQ_E2L] = { { _FASTQ_E2L }, TAG(E2L) }, \
    [FASTQ_QUAL] = { { _FASTQ_QUAL }, TAG(QUAL) }, \
    [FASTQ_DOMQRUNS] = { { _FASTQ_DOMQRUNS }, TAG(DOMQRUNS) }, \
    [FASTQ_QUALMPLX] = { { _FASTQ_QUALMPLX }, TAG(QUALMPLX) }, \
    [FASTQ_DIVRQUAL] = { { _FASTQ_DIVRQUAL }, TAG(DIVRQUAL) }, \
    [FASTQ_TOPLEVEL] = { { _FASTQ_TOPLEVEL }, TAG(TOPLEVEL) }, \
    [FASTQ_TAXID] = { { _FASTQ_TAXID }, TAG(TAXID) }, \
    [FASTQ_DEBUG_LINES] = { { _FASTQ_DEBUG_LINES }, TAG(DBGLINES) }, \
    [FASTQ_LINE3] = { { _FASTQ_LINE3 }, TAG(LINE3) }, \
    [FASTQ_T0HIRD] = { { _FASTQ_T0HIRD }, TAG(t0NAME) }, \
    [FASTQ_T1HIRD] = { { _FASTQ_T1HIRD }, TAG(t1NAME) }, \
    [FASTQ_T2HIRD] = { { _FASTQ_T2HIRD }, TAG(t2NAME) }, \
    [FASTQ_T3HIRD] = { { _FASTQ_T3HIRD }, TAG(t3NAME) }, \
    [FASTQ_T4HIRD] = { { _FASTQ_T4HIRD }, TAG(t4NAME) }, \
    [FASTQ_T5HIRD] = { { _FASTQ_T5HIRD }, TAG(t5NAME) }, \
    [FASTQ_T6HIRD] = { { _FASTQ_T6HIRD }, TAG(t6NAME) }, \
    [FASTQ_T7HIRD] = { { _FASTQ_T7HIRD }, TAG(t7NAME) }, \
    [FASTQ_COPY_Q] = { { _FASTQ_COPY_Q }, TAG(tQcopy) }, \
} 

typedef enum { FASTA_CONTIG, FASTA_LINEMETA, FASTA_EOL, FASTA_DESC, FASTA_COMMENT, FASTA_NONREF, FASTA_NONREF_X, FASTA_TOPLEVEL, FASTA_TAXID, FASTA_DEBUG_LINES, NUM_FASTA_FIELDS } FASTAFields;

#define FASTA_PREDEFINED { \
    [FASTA_CONTIG] = { { _FASTA_CONTIG }, TAG(CONTIG) }, \
    [FASTA_LINEMETA] = { { _FASTA_LINEMETA }, TAG(LINEMETA) }, \
    [FASTA_EOL] = { { _FASTA_EOL }, TAG(EOL) }, \
    [FASTA_DESC] = { { _FASTA_DESC }, TAG(DESC) }, \
    [FASTA_COMMENT] = { { _FASTA_COMMENT }, TAG(COMMENT) }, \
    [FASTA_NONREF] = { { _FASTA_NONREF }, TAG(NONREF) }, \
    [FASTA_NONREF_X] = { { _FASTA_NONREF_X }, TAG(NONREF_X) }, \
    [FASTA_TOPLEVEL] = { { _FASTA_TOPLEVEL }, TAG(TOPLEVEL) }, \
    [FASTA_TAXID] = { { _FASTA_TAXID }, TAG(TAXID) }, \
    [FASTA_DEBUG_LINES] = { { _FASTA_DEBUG_LINES }, TAG(DBGLINES) }, \
} 

typedef enum { GFF_SEQID, GFF_SOURCE, GFF_TYPE, GFF_START, GFF_END, GFF_SCORE, GFF_STRAND, GFF_PHASE, GFF_ATTRS, GFF_EOL, GFF_TOPLEVEL, GFF_COMMENT, GFF_DEBUG_LINES, ATTR_ID, ATTR_Name, ATTR_Alias, ATTR_Parent, ATTR_Target, ATTR_Target_ID, ATTR_Target_POS, ATTR_Target_STRAND, ATTR_Gap, ATTR_Derives_from, ATTR_Note, ATTR_Dbxref, ATTR_db_xref, ATTR_Ontology_term, ATTR_Is_circular, ATTR_Variant_seq, ATTR_Reference_seq, ATTR_Variant_freq, ATTR_ancestral_allele, ATTR_Variant_effect, ATTR_sift_prediction, ATTR_polyphen_prediction, ATTR_variant_peptide, ATTR_gene_id, ATTR_gene_name, ATTR_transcript_id, ATTR_transcript_name, ATTR_transcript_name_gene, ATTR_transcript_name_num, ATTR_protein_id, ATTR_ccds_id, ATTR_exon_id, ATTR_exon_number, ATTR_chr, ENSTid, NUM_GFF_FIELDS } GFFFields;

#define GFF_PREDEFINED { \
    [GFF_SEQID] = { { _GFF_SEQID }, TAG(SEQID) }, \
    [GFF_SOURCE] = { { _GFF_SOURCE }, TAG(SOURCE) }, \
    [GFF_TYPE] = { { _GFF_TYPE }, TAG(TYPE) }, \
    [GFF_START] = { { _GFF_START }, TAG(START) }, \
    [GFF_END] = { { _GFF_END }, TAG(END) }, \
    [GFF_SCORE] = { { _GFF_SCORE }, TAG(SCORE) }, \
    [GFF_STRAND] = { { _GFF_STRAND }, TAG(STRAND) }, \
    [GFF_PHASE] = { { _GFF_PHASE }, TAG(PHASE) }, \
    [GFF_ATTRS] = { { _GFF_ATTRS }, TAG(ATTRS) }, \
    [GFF_EOL] = { { _GFF_EOL }, TAG(EOL) }, \
    [GFF_TOPLEVEL] = { { _GFF_TOPLEVEL }, TAG(TOPLEVEL) }, \
    [GFF_COMMENT] = { { _GFF_COMMENT }, TAG(COMMENT) }, \
    [GFF_DEBUG_LINES] = { { _GFF_DEBUG_LINES }, TAG(DBGLINES) }, \
    [ATTR_ID] = { { _ATTR_ID }, TAG(ID) }, \
    [ATTR_Name] = { { _ATTR_Name }, TAG(Name) }, \
    [ATTR_Alias] = { { _ATTR_Alias }, TAG(Alias) }, \
    [ATTR_Parent] = { { _ATTR_Parent }, TAG(Parent) }, \
    [ATTR_Target] = { { _ATTR_Target }, TAG(Target) }, \
    [ATTR_Target_ID] = { { _ATTR_Target_ID }, TAG(T1gtID) }, \
    [ATTR_Target_POS] = { { _ATTR_Target_POS }, TAG(T2gtPOS) }, \
    [ATTR_Target_STRAND] = { { _ATTR_Target_STRAND }, TAG(T3gtSTRAND) }, \
    [ATTR_Gap] = { { _ATTR_Gap }, TAG(Gap) }, \
    [ATTR_Derives_from] = { { _ATTR_Derives_from }, TAG(Derives_from) }, \
    [ATTR_Note] = { { _ATTR_Note }, TAG(Note) }, \
    [ATTR_Dbxref] = { { _ATTR_Dbxref }, TAG(Dbxref) }, \
    [ATTR_db_xref] = { { _ATTR_db_xref }, TAG(db_xref) }, \
    [ATTR_Ontology_term] = { { _ATTR_Ontology_term }, TAG(Ontology_term) }, \
    [ATTR_Is_circular] = { { _ATTR_Is_circular }, TAG(Is_circular) }, \
    [ATTR_Variant_seq] = { { _ATTR_Variant_seq }, TAG(Variant_seq) }, \
    [ATTR_Reference_seq] = { { _ATTR_Reference_seq }, TAG(Reference_seq) }, \
    [ATTR_Variant_freq] = { { _ATTR_Variant_freq }, TAG(Variant_freq) }, \
    [ATTR_ancestral_allele] = { { _ATTR_ancestral_allele }, TAG(ancestral_allele) }, \
    [ATTR_Variant_effect] = { { _ATTR_Variant_effect }, TAG(Variant_effect) }, \
    [ATTR_sift_prediction] = { { _ATTR_sift_prediction }, TAG(sift_prediction) }, \
    [ATTR_polyphen_prediction] = { { _ATTR_polyphen_prediction }, TAG(polyphen_prediction) }, \
    [ATTR_variant_peptide] = { { _ATTR_variant_peptide }, TAG(variant_peptide) }, \
    [ATTR_gene_id] = { { _ATTR_gene_id }, TAG(gene_id) }, \
    [ATTR_gene_name] = { { _ATTR_gene_name }, TAG(gene_name) }, \
    [ATTR_transcript_id] = { { _ATTR_transcript_id }, TAG(transcript_id) }, \
    [ATTR_transcript_name] = { { _ATTR_transcript_name }, TAG(transcript_name) }, \
    [ATTR_transcript_name_gene] = { { _ATTR_transcript_name_gene }, TAG(t0ranscript_name) }, \
    [ATTR_transcript_name_num] = { { _ATTR_transcript_name_num }, TAG(t1ranscript_name) }, \
    [ATTR_protein_id] = { { _ATTR_protein_id }, TAG(protein_id) }, \
    [ATTR_ccds_id] = { { _ATTR_ccds_id }, TAG(ccds_id) }, \
    [ATTR_exon_id] = { { _ATTR_exon_id }, TAG(exon_id) }, \
    [ATTR_exon_number] = { { _ATTR_exon_number }, TAG(exon_number) }, \
    [ATTR_chr] = { { _ATTR_chr }, TAG(chr) }, \
    [ENSTid] = { { _ENSTid }, TAG(ENSTid) }, \
} 

typedef enum { ME23_CHROM, ME23_POS, ME23_ID, ME23_GENOTYPE, ME23_EOL, ME23_TOPLEVEL, ME23_TOP2VCF, ME23_DEBUG_LINES, NUM_ME23_FIELDS } ME23Fields;

#define ME23_PREDEFINED { \
    [ME23_CHROM] = { { _ME23_CHROM }, TAG(CHROM) }, \
    [ME23_POS] = { { _ME23_POS }, TAG(POS) }, \
    [ME23_ID] = { { _ME23_ID }, TAG(ID) }, \
    [ME23_GENOTYPE] = { { _ME23_GENOTYPE }, TAG(GENOTYPE) }, \
    [ME23_EOL] = { { _ME23_EOL }, TAG(EOL) }, \
    [ME23_TOPLEVEL] = { { _ME23_TOPLEVEL }, TAG(TOPLEVEL) }, \
    [ME23_TOP2VCF] = { { _ME23_TOP2VCF }, TAG(TOP2VCF) }, \
    [ME23_DEBUG_LINES] = { { _ME23_DEBUG_LINES }, TAG(DBGLINES) }, \
} 

typedef enum { GNRIC_DATA, GNRIC_TOPLEVEL, NUM_GNRIC_FIELDS } GNRICFields;

#define GNRIC_PREDEFINED { \
    [GNRIC_DATA] = { { _GNRIC_DATA }, TAG(DATA) }, \
    [GNRIC_TOPLEVEL] = { { _GNRIC_TOPLEVEL }, TAG(TOPLEVEL) }, \
} 

typedef enum { PHY_ID, PHY_SEQ, PHY_EOL, PHY_TOPLEVEL, PHY_TOP2FASTA, PHY_DEBUG_LINES, NUM_PHY_FIELDS } PHYFields;

#define PHY_PREDEFINED { \
    [PHY_ID] = { { _PHY_ID }, TAG(ID) }, \
    [PHY_SEQ] = { { _PHY_SEQ }, TAG(SEQ) }, \
    [PHY_EOL] = { { _PHY_EOL }, TAG(EOL) }, \
    [PHY_TOPLEVEL] = { { _PHY_TOPLEVEL }, TAG(TOPLEVEL) }, \
    [PHY_TOP2FASTA] = { { _PHY_TOP2FASTA }, TAG(TOP2FA) }, \
    [PHY_DEBUG_LINES] = { { _PHY_DEBUG_LINES }, TAG(DBGLINES) }, \
} 

typedef enum { CHAIN_NAMELUFT, CHAIN_STRNDLUFT, CHAIN_STARTLUFT, CHAIN_ENDLUFT, CHAIN_SIZELUFT, CHAIN_NAMEPRIM, CHAIN_STRNDPRIM, CHAIN_STARTPRIM, CHAIN_ENDPRIM, CHAIN_SIZEPRIM, CHAIN_CHAIN, CHAIN_SCORE, CHAIN_ID, CHAIN_VERIFIED, CHAIN_SET, CHAIN_SIZE, CHAIN_GAPS, CHAIN_EOL, CHAIN_TOPLEVEL, CHAIN_SEP, CHAIN_DEBUG_LINES, NUM_CHAIN_FIELDS } CHAINFields;

#define CHAIN_PREDEFINED { \
    [CHAIN_NAMELUFT] = { { _CHAIN_NAMELUFT }, TAG(NaMELUFT) }, \
    [CHAIN_STRNDLUFT] = { { _CHAIN_STRNDLUFT }, TAG(SrNDLUFT) }, \
    [CHAIN_STARTLUFT] = { { _CHAIN_STARTLUFT }, TAG(StRTLUFT) }, \
    [CHAIN_ENDLUFT] = { { _CHAIN_ENDLUFT }, TAG(EnDLUFT) }, \
    [CHAIN_SIZELUFT] = { { _CHAIN_SIZELUFT }, TAG(SiZELUFT) }, \
    [CHAIN_NAMEPRIM] = { { _CHAIN_NAMEPRIM }, TAG(NAMEPRIM) }, \
    [CHAIN_STRNDPRIM] = { { _CHAIN_STRNDPRIM }, TAG(SRNDPRIM) }, \
    [CHAIN_STARTPRIM] = { { _CHAIN_STARTPRIM }, TAG(STRTPRIM) }, \
    [CHAIN_ENDPRIM] = { { _CHAIN_ENDPRIM }, TAG(ENDPRIM) }, \
    [CHAIN_SIZEPRIM] = { { _CHAIN_SIZEPRIM }, TAG(SIZEPRIM) }, \
    [CHAIN_CHAIN] = { { _CHAIN_CHAIN }, TAG(CHAIN) }, \
    [CHAIN_SCORE] = { { _CHAIN_SCORE }, TAG(SCORE) }, \
    [CHAIN_ID] = { { _CHAIN_ID }, TAG(ID) }, \
    [CHAIN_VERIFIED] = { { _CHAIN_VERIFIED }, TAG(VERIFIED) }, \
    [CHAIN_SET] = { { _CHAIN_SET }, TAG(SET) }, \
    [CHAIN_SIZE] = { { _CHAIN_SIZE }, TAG(SIZE) }, \
    [CHAIN_GAPS] = { { _CHAIN_GAPS }, TAG(GAPS) }, \
    [CHAIN_EOL] = { { _CHAIN_EOL }, TAG(EOL) }, \
    [CHAIN_TOPLEVEL] = { { _CHAIN_TOPLEVEL }, TAG(TOPLEVEL) }, \
    [CHAIN_SEP] = { { _CHAIN_SEP }, TAG(SEP) }, \
    [CHAIN_DEBUG_LINES] = { { _CHAIN_DEBUG_LINES }, TAG(DBGLINES) }, \
} 

typedef enum { KRAKEN_CU, KRAKEN_QNAME, KRAKEN_Q0NAME, KRAKEN_Q1NAME, KRAKEN_Q2NAME, KRAKEN_Q3NAME, KRAKEN_Q4NAME, KRAKEN_Q5NAME, KRAKEN_Q6NAME, KRAKEN_Q7NAME, KRAKEN_Q8NAME, KRAKEN_Q9NAME, KRAKEN_QANAME, KRAKEN_QBNAME, KRAKEN_QmNAME, KRAKEN_TAXID, KRAKEN_SEQLEN, KRAKEN_SEQLEN_1, KRAKEN_SEQLEN_2, KRAKEN_KMERS, KRAKEN_KMERTAX, KRAKEN_KMERLEN, KRAKEN_EOL, KRAKEN_TOPLEVEL, KRAKEN_TOP2TAXID, KRAKEN_DEBUG_LINES, NUM_KRAKEN_FIELDS } KRAKENFields;

#define KRAKEN_PREDEFINED { \
    [KRAKEN_CU] = { { _KRAKEN_CU }, TAG(CU) }, \
    [KRAKEN_QNAME] = { { _KRAKEN_QNAME }, TAG(QNAME) }, \
    [KRAKEN_Q0NAME] = { { _KRAKEN_Q0NAME }, TAG(Q0NAME) }, \
    [KRAKEN_Q1NAME] = { { _KRAKEN_Q1NAME }, TAG(Q1NAME) }, \
    [KRAKEN_Q2NAME] = { { _KRAKEN_Q2NAME }, TAG(Q2NAME) }, \
    [KRAKEN_Q3NAME] = { { _KRAKEN_Q3NAME }, TAG(Q3NAME) }, \
    [KRAKEN_Q4NAME] = { { _KRAKEN_Q4NAME }, TAG(Q4NAME) }, \
    [KRAKEN_Q5NAME] = { { _KRAKEN_Q5NAME }, TAG(Q5NAME) }, \
    [KRAKEN_Q6NAME] = { { _KRAKEN_Q6NAME }, TAG(Q6NAME) }, \
    [KRAKEN_Q7NAME] = { { _KRAKEN_Q7NAME }, TAG(Q7NAME) }, \
    [KRAKEN_Q8NAME] = { { _KRAKEN_Q8NAME }, TAG(Q8NAME) }, \
    [KRAKEN_Q9NAME] = { { _KRAKEN_Q9NAME }, TAG(Q9NAME) }, \
    [KRAKEN_QANAME] = { { _KRAKEN_QANAME }, TAG(QANAME) }, \
    [KRAKEN_QBNAME] = { { _KRAKEN_QBNAME }, TAG(QBNAME) }, \
    [KRAKEN_QmNAME] = { { _KRAKEN_QmNAME }, TAG(QmNAME) }, \
    [KRAKEN_TAXID] = { { _KRAKEN_TAXID }, TAG(TAXID) }, \
    [KRAKEN_SEQLEN] = { { _KRAKEN_SEQLEN }, TAG(SEQLEN) }, \
    [KRAKEN_SEQLEN_1] = { { _KRAKEN_SEQLEN_1 }, TAG(S1EQLEN) }, \
    [KRAKEN_SEQLEN_2] = { { _KRAKEN_SEQLEN_2 }, TAG(S2EQLEN) }, \
    [KRAKEN_KMERS] = { { _KRAKEN_KMERS }, TAG(KMERS) }, \
    [KRAKEN_KMERTAX] = { { _KRAKEN_KMERTAX }, TAG(KMERTAX) }, \
    [KRAKEN_KMERLEN] = { { _KRAKEN_KMERLEN }, TAG(KMERLEN) }, \
    [KRAKEN_EOL] = { { _KRAKEN_EOL }, TAG(EOL) }, \
    [KRAKEN_TOPLEVEL] = { { _KRAKEN_TOPLEVEL }, TAG(TOPLEVEL) }, \
    [KRAKEN_TOP2TAXID] = { { _KRAKEN_TOP2TAXID }, TAG(TOP2HASH) }, \
    [KRAKEN_DEBUG_LINES] = { { _KRAKEN_DEBUG_LINES }, TAG(DBGLINES) }, \
} 

typedef enum { LOCS_X, LOCS_Y, LOCS_TOPLEVEL, LOCS_DEBUG_LINES, NUM_LOCS_FIELDS } LOCSFields;

#define LOCS_PREDEFINED { \
    [LOCS_X] = { { _LOCS_X }, TAG(X) }, \
    [LOCS_Y] = { { _LOCS_Y }, TAG(Y) }, \
    [LOCS_TOPLEVEL] = { { _LOCS_TOPLEVEL }, TAG(TOPLEVEL) }, \
    [LOCS_DEBUG_LINES] = { { _LOCS_DEBUG_LINES }, TAG(DBGLINES) }, \
} 

#define MAX_NUM_FIELDS_PER_DATA_TYPE 306

