Filtering by species using kraken2
==================================

`kraken2 <https://github.com/DerrickWood/kraken2>`_ is a tool (not associated with Genozip) that analyzes a FASTQ or FASTA file against a database typically derived from reference sequences of a large number of species (for example: human plus bacteria) and assigns an `NCBI Taxonomy ID <https://www.ncbi.nlm.nih.gov/taxonomy>`_ (taxid) to each read - generating a `kraken output file <https://github.com/DerrickWood/kraken2/wiki/Manual#output-formats>`_ containing these assignments.

Genozip allows filtering of SAM, BAM, FASTQ and FASTA files by *taxid*, using the kraken data. This allows, for example, filtering contamination out of an existing BAM file without needing to re-map it.

|

**Preparing the kraken file**

*From a BAM genozip file*:

::

    mkfifo mysample.fq
    genocat myfile.bam.genozip --fastq -o mysample.fq & 
    kraken2 --db $kraken_db --report myfile.kraken.report mysample.fq | genozip - --input kraken --output myfile.kraken.genozip
    rm mysample.fq

Note that we use named pipe (generated by mkfifo) for in-memory communication from genocat to kraken2. This is to overcome kraken's inability to use a regular pipe for the input file. 

*From a paird FASTQ genozip file*:

::

    mkfifo mysample.kraken mysample.R1.fq mysample.R2.fq
    genocat myfile.fq.genozip --component 1 -o mysample.R1.fq & 
    genocat myfile.fq.genozip --component 2 -o mysample.R2.fq & 
    kraken2 --db <kraken-db> --paired --output mkfifo.kraken --report myfile.kraken.report mysample.R1.fq mysample.R2.fq &
    genozip myfile.kraken
    rm mysample.kraken mysample.R1.fq mysample.R2.fq

Note that in this case we split the paired FASTQ data to two different pipes to overcomes kraken's inability to consume a paired fastq in interleaved format.

|

**Filtering an existing file with the kraken data**

This will display only the lines of the BAM file containing human data (NCBI Taxonomy ID 9606):

::

    genocat myfile.bam.genozip --kraken myfile.kraken.genozip --taxid 9606

This will display all the lines of the BAM file that DO NOT contain human data:

::

    genocat myfile.bam.genozip --kraken myfile.kraken.genozip --taxid ^9606

The --kraken and --taxid options work the same for SAM/BAM, FASTQ and FASTA files.

|

**Adding taxonomy information to a Genozip file**

You can generate a SAM/BAM, FASTQ or FASTA file with taxonomy information baked in:

::

    genozip myfile.bam --kraken myfile.kraken.genozip

This stores internally in the Genozip file, for each line, its taxid. Unless you need the kraken file for other purposes, you can discard it at this point.

Now, you can filter the file, as before, but this time it will be a lot faster since Genozip doesn't need to read the kraken file:

::

    genocat myfile.bam.genozip --taxid 9606

You can see the breakdown of Taxonomy IDs in the file with:

::

    genocat myfile.bam.genozip --show-counts TAXID

Finally, you can see the line-by-line taxid assignments with:

::

    genocat myfile.bam.genozip --show-kraken

|

**What if FASTQ R1 and R2 files are krakened separately?**

Normally, one would run kraken2 on both R1 and R2 FASTQ files together using kraken2's ``--paired`` option. However, sometimes this is not possible, and kraken2 must be run on each of the R1 and R2 files separately. This can happen for example, if the R1 and R2 files were generated using ``genocat --fastq`` (see: :ref:`sam2fq`) which might result in the reads in R1 and R2 files being in a different order, if the SAM/BAM file is sorted instead of collated.

To handle this, we prepare a concatenated kraken.genozip file, from the output of kraken2 on both FASTQs:

::

    genozip myfile-R1.kraken myfile-R2.kraken --output myfile.kraken

| The following logic applies with filtering file with a kraken.genozip consisting of multiple components:
|
| • Filtering with --taxid *taxid* will include the line if *any* of the components classifies this line as *taxid*.
|
| • Filtering with --taxid \^taxid will include the line if *none* of the components classifies this line as *taxid*.

